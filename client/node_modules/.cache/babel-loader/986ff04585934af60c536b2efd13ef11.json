{"ast":null,"code":"/* VARIABLES GLOBALES */\n\nlet categories_list = ['landscape', 'city', 'sky', 'nature', 'forest', 'sea', 'beach', 'mountain'];\nlet active_category = 'landscape';\nlet default_num_img = 12;\nlet pexels_per_page = 50;\n\n/* FUNCIONES */\n\nfunction getCategoriesList() {\n  return categories_list;\n}\n\n/*\nconst border_bottom_nav = () => {\n    if ( !document.getElementById(\"headerNav\") ) return;\n    if (window.scrollY > 0){\n        document.getElementById(\"headerNav\").classList.add('border-bottom-active');\n    }else{\n        document.getElementById(\"headerNav\").classList.remove('border-bottom-active');\n    }\n} \n\nconst infiniteScroll = () => {\n    if (window.scrollY + window.innerHeight >= document.documentElement.scrollHeight) add_to_img_container(active_category, default_num_img, false);\n}\n*/\nconst fill_navbarCategorias = () => {\n  const $navbarCategorias = document.getElementById(\"navbarCategorias\");\n  if (!$navbarCategorias) return;\n  let ul = document.createElement(\"ul\");\n  ul.className = 'navbar-nav';\n  categories_list.forEach(category => {\n    let button = document.createElement(\"button\");\n    button.id = category;\n    button.className = 'btn text-secondary bg-transparent text-hover-color';\n    button.type = 'button';\n    button.onclick = () => add_to_img_container(category, 6);\n    button.innerHTML = `${category.charAt(0).toUpperCase() + category.slice(1)}`;\n    let li = document.createElement(\"li\");\n    li.className = 'nav-item text-center';\n    li.appendChild(button);\n    ul.appendChild(li);\n  });\n  $navbarCategorias.appendChild(ul);\n};\nconst getJson = async (category, url) => {\n  try {\n    url = url == '' ? `https://api.pexels.com/v1/search?query=${category}&per_page=${pexels_per_page}` : url;\n    let res = await fetch(url, {\n      headers: {\n        Authorization: '563492ad6f91700001000001c6df12244f84428fa8467b09ec5d6ff9'\n      }\n    });\n    let json = await res.json();\n    //console.log(res, json);\n\n    if (!res.ok) throw {\n      status: res.status,\n      statusText: res.statusText\n    };\n    return json;\n  } catch (err) {\n    let message = err.statusText || \"Ocurrió un error\";\n    console.log(`Error ${err.status}: ${message}`);\n    return {};\n  }\n};\nconst getPhotos = async (category, cantidad) => {\n  if (data.categories[category].availableIds.length < cantidad) await data.push(category, await getJson(category, data.getNextPage(category)));\n  return data.getRandom(category, cantidad);\n};\n\n/*\nconst add_to_img_container = async  (category, num_img, colorizeButton = true) => {\n\n    const $img_container = document.getElementById(\"img_container\");\n    if (!$img_container) return;\n\n    if (colorizeButton) document.getElementById(active_category).classList.remove('button-active');\n    active_category = category;\n\n    let imgMapRandom = await getPhotos(category, num_img);\n\n    if (imgMapRandom.length == 0) return;\n\n    if (colorizeButton) document.getElementById(category).classList.add('button-active');\n\n    const img = document.createElement(\"img\");\n    img.className = 'img-fluid';\n    img.alt = 'random image';\n\n    const a = document.createElement('a');\n    a.target = \"_blank\";\n    a.appendChild(img);\n\n    const div = document.createElement(\"div\");\n    div.className = 'box';\n    div.appendChild(a);\n    \n    const $fragment = document.createDocumentFragment();\n\n    imgMapRandom.forEach( index => {\n        new_div = div.cloneNode(true);\n        new_div.querySelector('img').src = data.getSrc(index,'medium');\n        new_div.querySelector('a').href = data.getSrc(index,'original');\n        $fragment.appendChild(new_div);\n    });\n\n    $img_container.appendChild($fragment);\n}\n*/\n/* CLASES */\n\nclass dataClass {\n  constructor(categories_list) {\n    this.categories = {};\n    categories_list.forEach(category => this.categories[category] = {\n      page: 0,\n      next_page: '',\n      availableIds: []\n    });\n    this.usedIds = [];\n    this.photos = {};\n  }\n  isIndUsedIds(id) {\n    return this.usedIds.includes(id);\n  }\n  isInCategories(id) {\n    return Object.values(this.categories).some(category => category.availableIds.includes(id));\n  }\n  push(category, json) {\n    this.categories[category].next_page = json.next_page;\n    this.categories[category].page = json.page;\n    json.photos.forEach(photo => {\n      if (this.isIndUsedIds(photo.id) === false && this.isInCategories(photo.id) === false) {\n        this.categories[category].availableIds.push(photo.id);\n        this.photos[photo.id] = photo;\n      }\n    });\n  }\n  getRandom(category, cantidad) {\n    const disponibles = () => this.categories[category].availableIds.length;\n    let random = [];\n    let ciclos = cantidad < disponibles() ? cantidad : disponibles();\n    while (random.length < ciclos) {\n      let index = Math.floor(Math.random() * (disponibles() - 1));\n      if (!random.includes(this.categories[category].availableIds[index])) {\n        let id = this.categories[category].availableIds.splice(index, 1).pop();\n        random.push(id);\n        this.usedIds.push(id);\n      }\n    }\n    this.usedIds.push();\n    return random;\n  }\n  getSrc(id, type) {\n    return this.photos[id].src[type];\n  }\n  getNextPage(category) {\n    return this.categories[category].next_page;\n  }\n  remove(ids) {\n    ids.forEach(id => delete this.photos[id]);\n  }\n}\n\n/* EVENTOS */\n/*\nwindow.onscroll = () => {\n    border_bottom_nav();\n    infiniteScroll();\n}\n*/\n/* PRINCIPAL */\n/*\ndata = new dataClass(categories_list);\n\nfill_navbarCategorias();\nadd_to_img_container(active_category, default_num_img, false);\n*/\n\nexport default getCategoriesList;","map":{"version":3,"names":["categories_list","active_category","default_num_img","pexels_per_page","getCategoriesList","fill_navbarCategorias","$navbarCategorias","document","getElementById","ul","createElement","className","forEach","category","button","id","type","onclick","add_to_img_container","innerHTML","charAt","toUpperCase","slice","li","appendChild","getJson","url","res","fetch","headers","Authorization","json","ok","status","statusText","err","message","console","log","getPhotos","cantidad","data","categories","availableIds","length","push","getNextPage","getRandom","dataClass","constructor","page","next_page","usedIds","photos","isIndUsedIds","includes","isInCategories","Object","values","some","photo","disponibles","random","ciclos","index","Math","floor","splice","pop","getSrc","src","remove","ids"],"sources":["/hdd1/Alejandro_02/cursos/UTNBA-FullStackDev/proyecto-final-front/linea_03/r-image/src/main.js"],"sourcesContent":["\n\n/* VARIABLES GLOBALES */\n\nlet categories_list = ['landscape', 'city', 'sky', 'nature', 'forest', 'sea','beach','mountain'];\nlet active_category = 'landscape';\nlet default_num_img = 12;\nlet pexels_per_page = 50;\n\n/* FUNCIONES */\n\nfunction getCategoriesList(){\n    return categories_list;\n}\n\n/*\nconst border_bottom_nav = () => {\n    if ( !document.getElementById(\"headerNav\") ) return;\n    if (window.scrollY > 0){\n        document.getElementById(\"headerNav\").classList.add('border-bottom-active');\n    }else{\n        document.getElementById(\"headerNav\").classList.remove('border-bottom-active');\n    }\n} \n\nconst infiniteScroll = () => {\n    if (window.scrollY + window.innerHeight >= document.documentElement.scrollHeight) add_to_img_container(active_category, default_num_img, false);\n}\n*/\nconst fill_navbarCategorias = () => {\n    const $navbarCategorias = document.getElementById(\"navbarCategorias\");\n    if (!$navbarCategorias) return;\n    let ul = document.createElement(\"ul\");\n    ul.className = 'navbar-nav';\n\n    categories_list.forEach( category => {\n        let button = document.createElement(\"button\");\n        button.id = category;\n        button.className = 'btn text-secondary bg-transparent text-hover-color';\n        button.type = 'button';\n        button.onclick = () => add_to_img_container(category,6);\n        button.innerHTML = `${category.charAt(0).toUpperCase() + category.slice(1)}`;\n\n        let li = document.createElement(\"li\");\n        li.className = 'nav-item text-center';\n        li.appendChild(button);\n        ul.appendChild(li);\n    });\n    \n    $navbarCategorias.appendChild(ul);\n}\n\nconst getJson = async (category, url) => {\n    try {\n        url = (url == '') ? `https://api.pexels.com/v1/search?query=${category}&per_page=${pexels_per_page}` : url;\n        let res = await fetch(url, { headers: { Authorization: '563492ad6f91700001000001c6df12244f84428fa8467b09ec5d6ff9' } });\n        let json = await res.json();\n        //console.log(res, json);\n\n        if (!res.ok) throw { status: res.status, statusText: res.statusText };\n\n        return json;\n\n    } catch (err) {\n        let message = err.statusText || \"Ocurrió un error\";\n        console.log(`Error ${err.status}: ${message}`);\n        return {};\n    }\n}\n\nconst getPhotos = async (category, cantidad) => {\n    if (data.categories[category].availableIds.length < cantidad) await data.push(category, await getJson(category, data.getNextPage(category)));\n    return data.getRandom(category, cantidad);\n}\n\n/*\nconst add_to_img_container = async  (category, num_img, colorizeButton = true) => {\n\n    const $img_container = document.getElementById(\"img_container\");\n    if (!$img_container) return;\n\n    if (colorizeButton) document.getElementById(active_category).classList.remove('button-active');\n    active_category = category;\n\n    let imgMapRandom = await getPhotos(category, num_img);\n\n    if (imgMapRandom.length == 0) return;\n\n    if (colorizeButton) document.getElementById(category).classList.add('button-active');\n\n    const img = document.createElement(\"img\");\n    img.className = 'img-fluid';\n    img.alt = 'random image';\n\n    const a = document.createElement('a');\n    a.target = \"_blank\";\n    a.appendChild(img);\n\n    const div = document.createElement(\"div\");\n    div.className = 'box';\n    div.appendChild(a);\n    \n    const $fragment = document.createDocumentFragment();\n\n    imgMapRandom.forEach( index => {\n        new_div = div.cloneNode(true);\n        new_div.querySelector('img').src = data.getSrc(index,'medium');\n        new_div.querySelector('a').href = data.getSrc(index,'original');\n        $fragment.appendChild(new_div);\n    });\n\n    $img_container.appendChild($fragment);\n}\n*/\n/* CLASES */\n\nclass dataClass {\n    constructor(categories_list) {\n        this.categories = {}\n        categories_list.forEach( category => this.categories[category] = {page: 0, next_page:'', availableIds:[]} );\n        this.usedIds = [];\n        this.photos = {};\n    }\n    isIndUsedIds(id){\n        return this.usedIds.includes(id);\n    }\n    isInCategories(id){\n        return Object.values(this.categories).some( (category)=>( category.availableIds.includes(id) ) );\n    }\n    push(category,json) {\n        this.categories[category].next_page = json.next_page;\n        this.categories[category].page = json.page;\n        json.photos.forEach( photo => {\n            if(this.isIndUsedIds(photo.id) === false && this.isInCategories(photo.id) === false) {\n                this.categories[category].availableIds.push(photo.id);\n                this.photos[photo.id] = photo;\n            }\n        })\n    }\n    getRandom(category, cantidad) {\n        const disponibles = () => this.categories[category].availableIds.length;\n        let random = [];\n        let ciclos = cantidad < disponibles() ? cantidad : disponibles();\n        while (random.length < ciclos) {\n            let index = Math.floor(Math.random() * ( disponibles() - 1 ) );\n            if (!random.includes(this.categories[category].availableIds[index])){\n                let id = this.categories[category].availableIds.splice(index,1).pop();\n                random.push(id);\n                this.usedIds.push(id);\n            }\n        }\n        this.usedIds.push()\n        return random;\n    }\n    getSrc(id,type){\n        return this.photos[id].src[type];\n    }\n    getNextPage(category){\n        return this.categories[category].next_page;\n    }\n    remove(ids){\n        ids.forEach(id => delete this.photos[id]);\n    }\n}\n\n/* EVENTOS */\n/*\nwindow.onscroll = () => {\n    border_bottom_nav();\n    infiniteScroll();\n}\n*/\n/* PRINCIPAL */\n/*\ndata = new dataClass(categories_list);\n\nfill_navbarCategorias();\nadd_to_img_container(active_category, default_num_img, false);\n*/\n\nexport default getCategoriesList;"],"mappings":"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"},"metadata":{},"sourceType":"module"}