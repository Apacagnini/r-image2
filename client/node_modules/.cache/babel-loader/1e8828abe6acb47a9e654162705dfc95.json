{"ast":null,"code":"var _jsxFileName = \"/hdd1/Alejandro_02/cursos/UTNBA-FullStackDev/proyecto-final-front/linea_03/r-image/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport pexelsAuth from './components/secrets/secrets';\nimport NavHeader from './components/NavHeader/NavHeader';\nimport ImgContainer from './components/ImgContainer/ImgContainer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.getSrc = (id, type) => {\n      return this.state.photos[id].src[type];\n    };\n    this.getJson = async (category, url) => {\n      try {\n        url = url == '' ? `https://api.pexels.com/v1/search?query=${category}&per_page=${this.state.pexelsPerPage}` : url;\n        let res = await fetch(url, {\n          headers: {\n            Authorization: pexelsAuth()\n          }\n        });\n        let json = await res.json();\n        if (!res.ok) throw {\n          status: res.status,\n          statusText: res.statusText\n        };\n        return json;\n      } catch (err) {\n        let message = err.statusText || \"Ocurrió un error\";\n        console.log(`Error ${err.status}: ${message}`);\n        return {};\n      }\n    };\n    this.getPhotos = async (category, cantidad) => {\n      if (this.state.categories[category].availableIds.length < cantidad) await this.push(category, await this.getJson(category, this.getNextPage(category)));\n      return this.getRandom(category, cantidad);\n    };\n    this.addToImgContainer = async (category, num_img) => {\n      this.setState({\n        activeCategory: category\n      });\n      await this.getPhotos(category, num_img);\n      //this.forceUpdate()\n    };\n    this.borderNavbar = () => {\n      if (window.scrollY > 0) {\n        this.setState({\n          borderNavbar: true\n        });\n      } else {\n        this.setState({\n          borderNavbar: false\n        });\n      }\n    };\n    this.infiniteScroll = () => {\n      if (window.scrollY + window.innerHeight >= document.documentElement.scrollHeight) this.addToImgContainer(this.state.activeCategory, this.state.defaultNumImg);\n    };\n    this.state = {\n      categoriesList: ['landscape', 'city', 'sky', 'nature', 'forest', 'sea', 'beach', 'mountain'],\n      pexelsPerPage: 50,\n      defaultNumImg: 4,\n      activeCategory: 'landscape',\n      categories: {},\n      usedIds: [],\n      photos: {},\n      borderNavbar: false\n    };\n    this.state.categoriesList.forEach(category => this.state.categories[category] = {\n      page: 0,\n      next_page: '',\n      availableIds: []\n    });\n  }\n  isIndUsedIds(id) {\n    return this.state.usedIds.includes(id);\n  }\n  isInCategories(id) {\n    return Object.values(this.state.categories).some(category => category.availableIds.includes(id));\n  }\n  push(category, json) {\n    this.state.categories[category].next_page = json.next_page;\n    this.state.categories[category].page = json.page;\n    json.photos.forEach(photo => {\n      if (this.isIndUsedIds(photo.id) === false && this.isInCategories(photo.id) === false) {\n        this.state.categories[category].availableIds.push(photo.id);\n        this.state.photos[photo.id] = photo;\n      }\n    });\n  }\n  getRandom(category, cantidad) {\n    const disponibles = () => this.state.categories[category].availableIds.length;\n    let random = [];\n    let ciclos = cantidad < disponibles() ? cantidad : disponibles();\n    while (random.length < ciclos) {\n      let index = Math.floor(Math.random() * (disponibles() - 1));\n      if (!random.includes(this.state.categories[category].availableIds[index])) {\n        let id = this.state.categories[category].availableIds.splice(index, 1).pop();\n        random.push(id);\n        this.state.usedIds.push(id);\n      }\n      this.setState({\n        usedIds: this.state.usedIds\n      });\n    }\n    this.state.usedIds.push();\n    return random;\n  }\n  getNextPage(category) {\n    return this.state.categories[category].next_page;\n  }\n  componentDidMount() {\n    this.addToImgContainer(this.state.activeCategory, this.state.defaultNumImg);\n    window.onscroll = () => {\n      this.infiniteScroll();\n      this.borderNavbar();\n    };\n  }\n  render() {\n    console.log(this.state);\n    console.log(this.state.usedIds);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(NavHeader, {\n        borderNavbar: this.state.borderNavbar,\n        activeCategory: this.state.activeCategory,\n        categoriesList: this.state.categoriesList,\n        categoriesCallback: this.addToImgContainer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImgContainer, {\n        usedIds: this.state.usedIds,\n        getSrc: this.getSrc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","pexelsAuth","NavHeader","ImgContainer","App","Component","constructor","props","getSrc","id","type","state","photos","src","getJson","category","url","pexelsPerPage","res","fetch","headers","Authorization","json","ok","status","statusText","err","message","console","log","getPhotos","cantidad","categories","availableIds","length","push","getNextPage","getRandom","addToImgContainer","num_img","setState","activeCategory","borderNavbar","window","scrollY","infiniteScroll","innerHeight","document","documentElement","scrollHeight","defaultNumImg","categoriesList","usedIds","forEach","page","next_page","isIndUsedIds","includes","isInCategories","Object","values","some","photo","disponibles","random","ciclos","index","Math","floor","splice","pop","componentDidMount","onscroll","render"],"sources":["/hdd1/Alejandro_02/cursos/UTNBA-FullStackDev/proyecto-final-front/linea_03/r-image/src/App.js"],"sourcesContent":["import React from 'react';\nimport './App.css';\nimport pexelsAuth from './components/secrets/secrets';\nimport NavHeader from './components/NavHeader/NavHeader';\nimport ImgContainer from './components/ImgContainer/ImgContainer';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { categoriesList: ['landscape', 'city', 'sky', 'nature', 'forest', 'sea', 'beach', 'mountain'], pexelsPerPage: 50, defaultNumImg: 4, activeCategory: 'landscape', categories: {}, usedIds: [], photos: {}, borderNavbar: false };\n    this.state.categoriesList.forEach(category => this.state.categories[category] = { page: 0, next_page: '', availableIds: [] });\n  }\n\n  isIndUsedIds(id) {\n    return this.state.usedIds.includes(id);\n  }\n\n  isInCategories(id) {\n    return Object.values(this.state.categories).some((category) => (category.availableIds.includes(id)));\n  }\n\n  push(category, json) {\n    this.state.categories[category].next_page = json.next_page;\n    this.state.categories[category].page = json.page;\n    json.photos.forEach(photo => {\n      if (this.isIndUsedIds(photo.id) === false && this.isInCategories(photo.id) === false) {\n        this.state.categories[category].availableIds.push(photo.id);\n        this.state.photos[photo.id] = photo;\n      }\n    })\n  }\n\n  getRandom(category, cantidad) {\n    const disponibles = () => this.state.categories[category].availableIds.length;\n    let random = [];\n    let ciclos = cantidad < disponibles() ? cantidad : disponibles();\n    while (random.length < ciclos) {\n      let index = Math.floor(Math.random() * (disponibles() - 1));\n      if (!random.includes(this.state.categories[category].availableIds[index])) {\n        let id = this.state.categories[category].availableIds.splice(index, 1).pop();\n        random.push(id);\n        this.state.usedIds.push(id);\n      }\n      this.setState({ usedIds: this.state.usedIds });\n    }\n    this.state.usedIds.push()\n    return random;\n  }\n\n  getSrc = (id, type) => {\n    return this.state.photos[id].src[type];\n  }\n\n  getNextPage(category) {\n    return this.state.categories[category].next_page;\n  }\n\n  getJson = async (category, url) => {\n    try {\n      url = (url == '') ? `https://api.pexels.com/v1/search?query=${category}&per_page=${this.state.pexelsPerPage}` : url;\n      let res = await fetch(url, { headers: { Authorization: pexelsAuth() } });\n      let json = await res.json();\n\n      if (!res.ok) throw { status: res.status, statusText: res.statusText };\n\n      return json;\n\n    } catch (err) {\n      let message = err.statusText || \"Ocurrió un error\";\n      console.log(`Error ${err.status}: ${message}`);\n      return {};\n    }\n  }\n\n  getPhotos = async (category, cantidad) => {\n    if (this.state.categories[category].availableIds.length < cantidad) await this.push(category, await this.getJson(category, this.getNextPage(category)));\n    return this.getRandom(category, cantidad);\n  }\n\n  addToImgContainer = async (category, num_img) => {\n    this.setState({ activeCategory: category });\n    await this.getPhotos(category, num_img);\n    //this.forceUpdate()\n  }\n\n  borderNavbar = () => {\n    if (window.scrollY > 0){\n      this.setState({ borderNavbar: true });\n    }else{\n      this.setState({ borderNavbar: false });\n    } \n  }\n\n  infiniteScroll = () => {\n    if (window.scrollY + window.innerHeight >= document.documentElement.scrollHeight) this.addToImgContainer(this.state.activeCategory, this.state.defaultNumImg);\n  }\n\n  componentDidMount() {\n    this.addToImgContainer(this.state.activeCategory, this.state.defaultNumImg);\n\n    window.onscroll = () => {\n      this.infiniteScroll();\n      this.borderNavbar();\n  }\n  }\n\n  render() {\n    console.log(this.state);\n    console.log(this.state.usedIds);\n    return (\n      <div>\n        <NavHeader borderNavbar={this.state.borderNavbar} activeCategory={this.state.activeCategory} categoriesList={this.state.categoriesList} categoriesCallback={this.addToImgContainer} />\n        <ImgContainer usedIds={this.state.usedIds} getSrc={this.getSrc} />\n      </div>\n    );\n  }\n\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}