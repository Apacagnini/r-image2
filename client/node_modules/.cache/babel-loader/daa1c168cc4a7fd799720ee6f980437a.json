{"ast":null,"code":"var _jsxFileName = \"/hdd1/Alejandro_02/cursos/UTNBA-FullStackDev/proyecto-final-front/linea_03/r-image/src/components/ContactForm/ContactForm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport { ReactComponent as Check } from './check.svg';\nimport { ReactComponent as Spin } from './spin.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ContactForm() {\n  _s();\n  const [sended, setSended] = useState(2);\n  const {\n    register,\n    formState: {\n      errors\n    },\n    handleSubmit,\n    reset\n  } = useForm(\"\");\n  const onSubmit = async data => {\n    try {\n      const response = await fetch('https://formspree.io/f/moqbjpjj', {\n        method: 'post',\n        body: JSON.stringify(data),\n        headers: {\n          'Accept': 'application/json'\n        }\n      });\n      const jsonData = await response.json();\n      setSended(jsonData.ok == true ? true : false);\n      reset();\n    } catch {\n      setSended(false);\n      reset();\n    }\n  };\n  let showStatus = false;\n  const showError = () => {\n    if (showStatus) {\n      return false;\n    } else {\n      showStatus = true;\n      return true;\n    }\n  };\n  useEffect(() => {\n    showStatus = false;\n  });\n  const errorMessage = (error, type, message) => (error === null || error === void 0 ? void 0 : error.type) === type && showError() && /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"errorText\",\n    children: message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 91\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"formContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-secondary formTitle\",\n      children: \"Contact Us\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      method: \"post\",\n      className: \"formRegister\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \" Full Name *\",\n        maxLength: \"50\",\n        id: \"fullName\",\n        ...register('fullName', {\n          required: true,\n          maxLength: 50\n        }),\n        className: \"input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), errorMessage(errors.fullName, 'required', 'Full Name field is required'), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \" Email *\",\n        maxLength: \"50\",\n        id: \"email\",\n        ...register('email', {\n          required: true,\n          pattern: /^\\w+([.-_+]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,10})+$/,\n          maxLength: 50\n        }),\n        className: \"input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), errorMessage(errors.email, 'required', 'Email field is required'), errorMessage(errors.email, 'pattern', 'Format is wrong'), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \" Message *\",\n        maxLength: \"300\",\n        minLength: \"10\",\n        cols: \"20\",\n        rows: \"5\",\n        id: \"message\",\n        ...register('message', {\n          required: true,\n          minLength: 2,\n          minLength: 10,\n          maxLength: 300\n        }),\n        className: \"input textarea\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), errorMessage(errors.message, 'required', 'Message field is required'), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"submit\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          className: \"d-none\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), sended == false ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"sendedFail\",\n          children: \"Something went wrong\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 43\n        }, this) : sended == true ? /*#__PURE__*/_jsxDEV(Check, {\n          className: \"check\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 115\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 145\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n_s(ContactForm, \"Msg3GnHtIDTeJS6hQTFsU2Odn0U=\", false, function () {\n  return [useForm];\n});\n_c = ContactForm;\n;\n\n//{(sended == true) ? <Check className='check' /> : (sended == false) ? <p className='sendedFail'>Something went wrong</p> : <p>Submit</p> }\n\n//<input type=\"submit\" value=\"Submit\" className=\"submit\" />\n//{(sended == true) ? <p className='sendedOk'>Message sent successfully</p> : (sended == false) ? <p className='sendedFail'>Something went wrong</p> : ''}\nvar _c;\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"names":["React","useEffect","useState","useForm","ReactComponent","Check","Spin","ContactForm","sended","setSended","register","formState","errors","handleSubmit","reset","onSubmit","data","response","fetch","method","body","JSON","stringify","headers","jsonData","json","ok","showStatus","showError","errorMessage","error","type","message","required","maxLength","fullName","pattern","email","minLength"],"sources":["/hdd1/Alejandro_02/cursos/UTNBA-FullStackDev/proyecto-final-front/linea_03/r-image/src/components/ContactForm/ContactForm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport { ReactComponent as Check } from './check.svg'\nimport { ReactComponent as Spin } from './spin.svg'\n\nexport default function ContactForm() {\n    const [sended, setSended] = useState(2);\n    const { register, formState: { errors }, handleSubmit, reset } = useForm(\"\");\n\n    const onSubmit = async (data) => {\n        try {\n            const response = await fetch('https://formspree.io/f/moqbjpjj', {\n                method: 'post',\n                body: JSON.stringify(data),\n                headers: {\n                    'Accept': 'application/json'\n                }\n            });\n            const jsonData = await response.json();\n            setSended(jsonData.ok == true ? true : false);\n            reset();\n        } catch {\n            setSended(false);\n            reset();\n        }\n    }\n\n    let showStatus = false;\n    const showError = () => {\n        if (showStatus) {\n            return false;\n        } else {\n            showStatus = true;\n            return true;\n        }\n    }\n\n    useEffect(() => {\n        showStatus = false;\n    });\n\n    const errorMessage = (error, type, message) => error?.type === type && showError() && <p className=\"errorText\">{message}</p>;\n\n    return (\n        <div className='formContainer'>\n            <h3 className='text-secondary formTitle' >Contact Us</h3>\n            <form onSubmit={handleSubmit(onSubmit)} method=\"post\" className='formRegister'>\n                <input type=\"text\" placeholder=\" Full Name *\" maxLength=\"50\" id=\"fullName\" {...register('fullName', { required: true, maxLength: 50 })} className=\"input\" />\n                {errorMessage(errors.fullName, 'required', 'Full Name field is required')}\n                <input type=\"text\" placeholder=\" Email *\" maxLength=\"50\" id=\"email\" {...register('email', { required: true, pattern: /^\\w+([.-_+]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,10})+$/, maxLength: 50 })} className=\"input\" />\n                {errorMessage(errors.email, 'required', 'Email field is required')}\n                {errorMessage(errors.email, 'pattern', 'Format is wrong')}\n                <textarea placeholder=\" Message *\" maxLength=\"300\" minLength=\"10\" cols=\"20\" rows=\"5\" id=\"message\" {...register('message', { required: true, minLength: 2, minLength: 10, maxLength: 300 })} className=\"input textarea\"></textarea>\n                {errorMessage(errors.message, 'required', 'Message field is required')}\n                <label className=\"submit\">\n                    <input type=\"submit\" className='d-none' />\n                    { (sended == false) ? <p className='sendedFail'>Something went wrong</p> : (sended == true) ? <Check className='check' /> : <p>Submit</p> }\n                </label>\n            </form>\n        </div>\n    );\n};\n\n//{(sended == true) ? <Check className='check' /> : (sended == false) ? <p className='sendedFail'>Something went wrong</p> : <p>Submit</p> }\n\n//<input type=\"submit\" value=\"Submit\" className=\"submit\" />\n//{(sended == true) ? <p className='sendedOk'>Message sent successfully</p> : (sended == false) ? <p className='sendedFail'>Something went wrong</p> : ''}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,OAAO,QAAQ,iBAAiB;AACzC,SAASC,cAAc,IAAIC,KAAK,QAAQ,aAAa;AACrD,SAASD,cAAc,IAAIE,IAAI,QAAQ,YAAY;AAAA;AAEnD,eAAe,SAASC,WAAW,GAAG;EAAA;EAClC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM;IAAEQ,QAAQ;IAAEC,SAAS,EAAE;MAAEC;IAAO,CAAC;IAAEC,YAAY;IAAEC;EAAM,CAAC,GAAGX,OAAO,CAAC,EAAE,CAAC;EAE5E,MAAMY,QAAQ,GAAG,MAAOC,IAAI,IAAK;IAC7B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;QAC5DC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,IAAI,CAAC;QAC1BO,OAAO,EAAE;UACL,QAAQ,EAAE;QACd;MACJ,CAAC,CAAC;MACF,MAAMC,QAAQ,GAAG,MAAMP,QAAQ,CAACQ,IAAI,EAAE;MACtChB,SAAS,CAACe,QAAQ,CAACE,EAAE,IAAI,IAAI,GAAG,IAAI,GAAG,KAAK,CAAC;MAC7CZ,KAAK,EAAE;IACX,CAAC,CAAC,MAAM;MACJL,SAAS,CAAC,KAAK,CAAC;MAChBK,KAAK,EAAE;IACX;EACJ,CAAC;EAED,IAAIa,UAAU,GAAG,KAAK;EACtB,MAAMC,SAAS,GAAG,MAAM;IACpB,IAAID,UAAU,EAAE;MACZ,OAAO,KAAK;IAChB,CAAC,MAAM;MACHA,UAAU,GAAG,IAAI;MACjB,OAAO,IAAI;IACf;EACJ,CAAC;EAED1B,SAAS,CAAC,MAAM;IACZ0B,UAAU,GAAG,KAAK;EACtB,CAAC,CAAC;EAEF,MAAME,YAAY,GAAG,CAACC,KAAK,EAAEC,IAAI,EAAEC,OAAO,KAAK,CAAAF,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEC,IAAI,MAAKA,IAAI,IAAIH,SAAS,EAAE,iBAAI;IAAG,SAAS,EAAC,WAAW;IAAA,UAAEI;EAAO;IAAA;IAAA;IAAA;EAAA,QAAK;EAE5H,oBACI;IAAK,SAAS,EAAC,eAAe;IAAA,wBAC1B;MAAI,SAAS,EAAC,0BAA0B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAiB,eACzD;MAAM,QAAQ,EAAEnB,YAAY,CAACE,QAAQ,CAAE;MAAC,MAAM,EAAC,MAAM;MAAC,SAAS,EAAC,cAAc;MAAA,wBAC1E;QAAO,IAAI,EAAC,MAAM;QAAC,WAAW,EAAC,cAAc;QAAC,SAAS,EAAC,IAAI;QAAC,EAAE,EAAC,UAAU;QAAA,GAAKL,QAAQ,CAAC,UAAU,EAAE;UAAEuB,QAAQ,EAAE,IAAI;UAAEC,SAAS,EAAE;QAAG,CAAC,CAAC;QAAE,SAAS,EAAC;MAAO;QAAA;QAAA;QAAA;MAAA,QAAG,EAC3JL,YAAY,CAACjB,MAAM,CAACuB,QAAQ,EAAE,UAAU,EAAE,6BAA6B,CAAC,eACzE;QAAO,IAAI,EAAC,MAAM;QAAC,WAAW,EAAC,UAAU;QAAC,SAAS,EAAC,IAAI;QAAC,EAAE,EAAC,OAAO;QAAA,GAAKzB,QAAQ,CAAC,OAAO,EAAE;UAAEuB,QAAQ,EAAE,IAAI;UAAEG,OAAO,EAAE,gDAAgD;UAAEF,SAAS,EAAE;QAAG,CAAC,CAAC;QAAE,SAAS,EAAC;MAAO;QAAA;QAAA;QAAA;MAAA,QAAG,EAC5ML,YAAY,CAACjB,MAAM,CAACyB,KAAK,EAAE,UAAU,EAAE,yBAAyB,CAAC,EACjER,YAAY,CAACjB,MAAM,CAACyB,KAAK,EAAE,SAAS,EAAE,iBAAiB,CAAC,eACzD;QAAU,WAAW,EAAC,YAAY;QAAC,SAAS,EAAC,KAAK;QAAC,SAAS,EAAC,IAAI;QAAC,IAAI,EAAC,IAAI;QAAC,IAAI,EAAC,GAAG;QAAC,EAAE,EAAC,SAAS;QAAA,GAAK3B,QAAQ,CAAC,SAAS,EAAE;UAAEuB,QAAQ,EAAE,IAAI;UAAEK,SAAS,EAAE,CAAC;UAAEA,SAAS,EAAE,EAAE;UAAEJ,SAAS,EAAE;QAAI,CAAC,CAAC;QAAE,SAAS,EAAC;MAAgB;QAAA;QAAA;QAAA;MAAA,QAAY,EACjOL,YAAY,CAACjB,MAAM,CAACoB,OAAO,EAAE,UAAU,EAAE,2BAA2B,CAAC,eACtE;QAAO,SAAS,EAAC,QAAQ;QAAA,wBACrB;UAAO,IAAI,EAAC,QAAQ;UAAC,SAAS,EAAC;QAAQ;UAAA;UAAA;UAAA;QAAA,QAAG,EACvCxB,MAAM,IAAI,KAAK,gBAAI;UAAG,SAAS,EAAC,YAAY;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAyB,GAAIA,MAAM,IAAI,IAAI,gBAAI,QAAC,KAAK;UAAC,SAAS,EAAC;QAAO;UAAA;UAAA;UAAA;QAAA,QAAG,gBAAG;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAa;MAAA;QAAA;QAAA;QAAA;MAAA,QACrI;IAAA;MAAA;MAAA;MAAA;IAAA,QACL;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AAEd;AAAC,GAxDuBD,WAAW;EAAA,QAEkCJ,OAAO;AAAA;AAAA,KAFpDI,WAAW;AAwDlC;;AAED;;AAEA;AACA;AAAA;AAAA"},"metadata":{},"sourceType":"module"}