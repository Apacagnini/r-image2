{"ast":null,"code":"var _jsxFileName = \"/hdd1/Alejandro_02/cursos/UTNBA-FullStackDev/proyecto-final-front/linea_03/r-image/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport NavHeader from './NavHeader';\n//import ImgContainer from './ImgContainer';\nimport { Container } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ImgContainer(props) {\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex flex-wrap justify-content-center box-container\",\n      children: props.usedIds.map(index => {\n        /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: props.getSrc(index, 'original'),\n            target: \"_blank\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"img-fluid\",\n              alt: \"random image\",\n              src: props.getSrc(index, 'medium')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 14,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n_c = ImgContainer;\n;\nclass App extends React.Component {\n  constructor(props) {\n    var _this;\n    super(props);\n    _this = this;\n    this.getSrc = (id, type) => {\n      //console.log('photos:' + this.state.photos);\n      return this.state.photos[id].src[type];\n    };\n    this.getJson = async (category, url) => {\n      try {\n        url = url == '' ? `https://api.pexels.com/v1/search?query=${category}&per_page=${this.state.pexelsPerPage}` : url;\n        let res = await fetch(url, {\n          headers: {\n            Authorization: '563492ad6f91700001000001c6df12244f84428fa8467b09ec5d6ff9'\n          }\n        });\n        let json = await res.json();\n        //console.log(res, json);\n\n        if (!res.ok) throw {\n          status: res.status,\n          statusText: res.statusText\n        };\n        return json;\n      } catch (err) {\n        let message = err.statusText || \"OcurriÃ³ un error\";\n        console.log(`Error ${err.status}: ${message}`);\n        return {};\n      }\n    };\n    this.getPhotos = async (category, cantidad) => {\n      if (this.state.categories[category].availableIds.length < cantidad) await this.push(category, await this.getJson(category, this.getNextPage(category)));\n      return this.getRandom(category, cantidad);\n    };\n    this.addToImgContainer = async function (category, num_img) {\n      let colorizeButton = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      //this.state.activeCategory = category;\n      _this.setState({\n        activeCategory: category\n      });\n      let li = await _this.getPhotos(category, num_img);\n      _this.forceUpdate();\n      console.log('addToImgContainer getSrc' + _this.getSrc(li[0], 'medium'));\n    };\n    this.state = {\n      categoriesList: ['landscape', 'city', 'sky', 'nature', 'forest', 'sea', 'beach', 'mountain'],\n      pexelsPerPage: 50,\n      defaultNumImg: 12,\n      activeCategory: 'landscape',\n      categories: {},\n      usedIds: [],\n      photos: {}\n    };\n    this.state.categoriesList.forEach(category => this.state.categories[category] = {\n      page: 0,\n      next_page: '',\n      availableIds: []\n    });\n  }\n  isIndUsedIds(id) {\n    return this.state.usedIds.includes(id);\n  }\n  isInCategories(id) {\n    return Object.values(this.state.categories).some(category => category.availableIds.includes(id));\n  }\n  push(category, json) {\n    this.state.categories[category].next_page = json.next_page;\n    this.state.categories[category].page = json.page;\n    json.photos.forEach(photo => {\n      if (this.isIndUsedIds(photo.id) === false && this.isInCategories(photo.id) === false) {\n        this.state.categories[category].availableIds.push(photo.id);\n        this.state.photos[photo.id] = photo;\n      }\n    });\n  }\n  getRandom(category, cantidad) {\n    const disponibles = () => this.state.categories[category].availableIds.length;\n    let random = [];\n    let ciclos = cantidad < disponibles() ? cantidad : disponibles();\n    while (random.length < ciclos) {\n      let index = Math.floor(Math.random() * (disponibles() - 1));\n      if (!random.includes(this.state.categories[category].availableIds[index])) {\n        let id = this.state.categories[category].availableIds.splice(index, 1).pop();\n        random.push(id);\n        this.state.usedIds.push(id);\n        //this.setState(prevState => ({ usedIds: this.prevState.usedIds.concat([id]) }));\n      }\n    }\n\n    this.state.usedIds.push();\n    return random;\n  }\n  getNextPage(category) {\n    return this.state.categories[category].next_page;\n  }\n  componentDidMount() {\n    //this.addToImgContainer(this.state.activeCategory, 12);\n  }\n  render() {\n    console.log(this.state);\n    console.log(this.state.usedIds);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(NavHeader, {\n        categoriesList: this.state.categoriesList,\n        categoriesCallback: this.addToImgContainer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImgContainer, {\n        usedIds: this.state.usedIds,\n        getSrc: this.getSrc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n/*\n        <Container>\n          <div className='d-flex flex-wrap justify-content-center box-container' id=\"img_container\">\n            {\n              this.state.usedIds.map(index => {\n                <div className='box'>\n                  <a href={this.getSrc(index, 'original')} target='_blank'>\n                    <img className='img-fluid' alt='random image' src={this.getSrc(index, 'medium')} ></img>\n                  </a>\n                </div>\n              })\n            }\n          </div>\n        </Container>\n*/\n\n/*\nfunction App() {\n  return (\n    <div>\n      <NavHeader/>\n      <ImgContainer/>\n    </div>\n  );\n}\n*/\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"ImgContainer\");","map":{"version":3,"names":["React","NavHeader","Container","ImgContainer","props","usedIds","map","index","getSrc","App","Component","constructor","id","type","state","photos","src","getJson","category","url","pexelsPerPage","res","fetch","headers","Authorization","json","ok","status","statusText","err","message","console","log","getPhotos","cantidad","categories","availableIds","length","push","getNextPage","getRandom","addToImgContainer","num_img","colorizeButton","setState","activeCategory","li","forceUpdate","categoriesList","defaultNumImg","forEach","page","next_page","isIndUsedIds","includes","isInCategories","Object","values","some","photo","disponibles","random","ciclos","Math","floor","splice","pop","componentDidMount","render"],"sources":["/hdd1/Alejandro_02/cursos/UTNBA-FullStackDev/proyecto-final-front/linea_03/r-image/src/App.js"],"sourcesContent":["import React from 'react';\nimport './App.css';\nimport NavHeader from './NavHeader';\n//import ImgContainer from './ImgContainer';\nimport { Container } from 'react-bootstrap';\n\nfunction ImgContainer(props) {\n  return (\n    <Container>\n      <div className='d-flex flex-wrap justify-content-center box-container'>\n        {props.usedIds.map(index => {\n          <div className='box'>\n            <a href={props.getSrc(index, 'original')} target='_blank'>\n              <img className='img-fluid' alt='random image' src={props.getSrc(index, 'medium')} ></img>\n            </a>\n          </div>\n        })}\n      </div>\n    </Container>\n  );\n};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { categoriesList: ['landscape', 'city', 'sky', 'nature', 'forest', 'sea', 'beach', 'mountain'], pexelsPerPage: 50, defaultNumImg: 12, activeCategory: 'landscape', categories: {}, usedIds: [], photos: {} };\n    this.state.categoriesList.forEach(category => this.state.categories[category] = { page: 0, next_page: '', availableIds: [] });\n  }\n\n  isIndUsedIds(id) {\n    return this.state.usedIds.includes(id);\n  }\n\n  isInCategories(id) {\n    return Object.values(this.state.categories).some((category) => (category.availableIds.includes(id)));\n  }\n\n  push(category, json) {\n    this.state.categories[category].next_page = json.next_page;\n    this.state.categories[category].page = json.page;\n    json.photos.forEach(photo => {\n      if (this.isIndUsedIds(photo.id) === false && this.isInCategories(photo.id) === false) {\n        this.state.categories[category].availableIds.push(photo.id);\n        this.state.photos[photo.id] = photo;\n      }\n    })\n  }\n\n  getRandom(category, cantidad) {\n    const disponibles = () => this.state.categories[category].availableIds.length;\n    let random = [];\n    let ciclos = cantidad < disponibles() ? cantidad : disponibles();\n    while (random.length < ciclos) {\n      let index = Math.floor(Math.random() * (disponibles() - 1));\n      if (!random.includes(this.state.categories[category].availableIds[index])) {\n        let id = this.state.categories[category].availableIds.splice(index, 1).pop();\n        random.push(id);\n        this.state.usedIds.push(id);\n        //this.setState(prevState => ({ usedIds: this.prevState.usedIds.concat([id]) }));\n      }\n    }\n    this.state.usedIds.push()\n    return random;\n  }\n\n  getSrc = (id, type) => {\n    //console.log('photos:' + this.state.photos);\n    return this.state.photos[id].src[type];\n  }\n\n  getNextPage(category) {\n    return this.state.categories[category].next_page;\n  }\n\n  getJson = async (category, url) => {\n    try {\n      url = (url == '') ? `https://api.pexels.com/v1/search?query=${category}&per_page=${this.state.pexelsPerPage}` : url;\n      let res = await fetch(url, { headers: { Authorization: '563492ad6f91700001000001c6df12244f84428fa8467b09ec5d6ff9' } });\n      let json = await res.json();\n      //console.log(res, json);\n\n      if (!res.ok) throw { status: res.status, statusText: res.statusText };\n\n      return json;\n\n    } catch (err) {\n      let message = err.statusText || \"OcurriÃ³ un error\";\n      console.log(`Error ${err.status}: ${message}`);\n      return {};\n    }\n  }\n\n  getPhotos = async (category, cantidad) => {\n    if (this.state.categories[category].availableIds.length < cantidad) await this.push(category, await this.getJson(category, this.getNextPage(category)));\n    return this.getRandom(category, cantidad);\n  }\n\n  addToImgContainer = async (category, num_img, colorizeButton = true) => {\n    //this.state.activeCategory = category;\n    this.setState({ activeCategory: category });\n    let li = await this.getPhotos(category, num_img);\n    this.forceUpdate()\n    console.log('addToImgContainer getSrc' + this.getSrc(li[0], 'medium'));\n  }\n\n  componentDidMount() {\n    //this.addToImgContainer(this.state.activeCategory, 12);\n  }\n\n  render() {\n    console.log(this.state);\n    console.log(this.state.usedIds);\n    return (\n      <div>\n        <NavHeader categoriesList={this.state.categoriesList} categoriesCallback={this.addToImgContainer} />\n        <ImgContainer usedIds={this.state.usedIds} getSrc={this.getSrc} />\n      </div>\n    );\n  }\n\n}\n\n\n/*\n        <Container>\n          <div className='d-flex flex-wrap justify-content-center box-container' id=\"img_container\">\n            {\n              this.state.usedIds.map(index => {\n                <div className='box'>\n                  <a href={this.getSrc(index, 'original')} target='_blank'>\n                    <img className='img-fluid' alt='random image' src={this.getSrc(index, 'medium')} ></img>\n                  </a>\n                </div>\n              })\n            }\n          </div>\n        </Container>\n*/\n\n/*\nfunction App() {\n  return (\n    <div>\n      <NavHeader/>\n      <ImgContainer/>\n    </div>\n  );\n}\n*/\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}