{"ast":null,"code":"var _jsxFileName = \"/hdd1/Alejandro_02/cursos/UTNBA-FullStackDev/proyecto-final-front/linea_03/r-image/src/App.js\";\nimport React from 'react';\nimport NavHeader from './components/NavHeader/NavHeader';\nimport ImgContainer from './components/ImgContainer/ImgContainer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.getSrc = (id, type) => {\n      return this.state.photos[id].src[type];\n    };\n    this.getPhotographer = id => {\n      return this.state.photos[id].photographer;\n    };\n    this.getJson = async (category, url) => {\n      try {\n        url = url == '' ? `https://api.pexels.com/v1/search?query=${category}&per_page=${this.pexelsPerPage}` : url;\n        let res = await fetch(url, {\n          headers: {\n            Authorization: process.env.REACT_APP_PEXELS_API_KEY\n          }\n        });\n        let json = await res.json();\n        if (!res.ok) throw {\n          status: res.status,\n          statusText: res.statusText\n        };\n        return json;\n      } catch (err) {\n        let message = err.statusText || \"Ocurrió un error\";\n        console.log(`Error ${err.status}: ${message}`);\n        return {};\n      }\n    };\n    this.getPhotos = async (category, cantidad) => {\n      if (this.state.categories[category].availableIds.length < cantidad) await this.push(category, await this.getJson(category, this.getNextPage(category)));\n      return this.getRandom(category, cantidad);\n    };\n    this.addToImgContainer = async (category, num_img) => {\n      this.setState({\n        activeCategory: category\n      });\n      await this.getPhotos(category, num_img);\n    };\n    this.infiniteScroll = () => {\n      if (window.scrollY + window.innerHeight >= document.documentElement.scrollHeight) this.addToImgContainer(this.state.activeCategory, this.defaultNumImg);\n    };\n    this.pexelsPerPage = 100;\n    this.defaultNumImg = 10;\n    this.categoriesList = ['landscape', 'people', 'city', 'coffee', 'nature', 'forest', 'flowers', 'sky', 'night', 'rain', 'stars', 'abstract', 'technology', 'business', 'travel', 'sailboat', 'ocean', 'waves', 'sea', 'beach', 'ice', 'iceland', 'iceberg', 'arctic', 'mountain'];\n    this.state = {\n      activeCategory: 'landscape',\n      categories: {},\n      usedIds: [],\n      photos: {}\n    };\n    this.categoriesList.forEach(category => this.state.categories[category] = {\n      page: 0,\n      next_page: '',\n      availableIds: []\n    });\n  }\n  isIndUsedIds(id) {\n    return this.state.usedIds.includes(id);\n  }\n  isInCategories(id) {\n    return Object.values(this.state.categories).some(category => category.availableIds.includes(id));\n  }\n  push(category, json) {\n    this.state.categories[category].next_page = json.next_page;\n    this.state.categories[category].page = json.page;\n    json.photos.forEach(photo => {\n      if (this.isIndUsedIds(photo.id) === false && this.isInCategories(photo.id) === false) {\n        this.state.categories[category].availableIds.push(photo.id);\n        this.state.photos[photo.id] = photo;\n      }\n    });\n  }\n  getRandom(category, cantidad) {\n    const disponibles = () => this.state.categories[category].availableIds.length;\n    let random = [];\n    let ciclos = cantidad < disponibles() ? cantidad : disponibles();\n    while (random.length < ciclos) {\n      let index = Math.floor(Math.random() * (disponibles() - 1));\n      if (!random.includes(this.state.categories[category].availableIds[index])) {\n        let id = this.state.categories[category].availableIds.splice(index, 1).pop();\n        random.push(id);\n        this.state.usedIds.push(id);\n      }\n      this.setState({\n        usedIds: this.state.usedIds\n      });\n    }\n    this.state.usedIds.push();\n    return random;\n  }\n  getNextPage(category) {\n    return this.state.categories[category].next_page;\n  }\n  componentDidMount() {\n    this.addToImgContainer(this.state.activeCategory, 12);\n    window.addEventListener('scroll', this.infiniteScroll, true);\n  }\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.infiniteScroll);\n  }\n  render() {\n    //console.log(this.state);\n    //console.log(this.state.usedIds);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(NavHeader, {\n        activeCategory: this.state.activeCategory,\n        categoriesList: this.categoriesList,\n        categoriesCallback: this.addToImgContainer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImgContainer, {\n        usedIds: this.state.usedIds,\n        getSrc: this.getSrc,\n        getPhotographer: this.getPhotographer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","NavHeader","ImgContainer","App","Component","constructor","props","getSrc","id","type","state","photos","src","getPhotographer","photographer","getJson","category","url","pexelsPerPage","res","fetch","headers","Authorization","process","env","REACT_APP_PEXELS_API_KEY","json","ok","status","statusText","err","message","console","log","getPhotos","cantidad","categories","availableIds","length","push","getNextPage","getRandom","addToImgContainer","num_img","setState","activeCategory","infiniteScroll","window","scrollY","innerHeight","document","documentElement","scrollHeight","defaultNumImg","categoriesList","usedIds","forEach","page","next_page","isIndUsedIds","includes","isInCategories","Object","values","some","photo","disponibles","random","ciclos","index","Math","floor","splice","pop","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","render"],"sources":["/hdd1/Alejandro_02/cursos/UTNBA-FullStackDev/proyecto-final-front/linea_03/r-image/src/App.js"],"sourcesContent":["import React from 'react';\nimport NavHeader from './components/NavHeader/NavHeader';\nimport ImgContainer from './components/ImgContainer/ImgContainer';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.pexelsPerPage = 100;\n    this.defaultNumImg = 10;\n    this.categoriesList = ['landscape', 'people', 'city', 'coffee', 'nature', 'forest', 'flowers', 'sky', 'night', 'rain', 'stars', 'abstract', 'technology', 'business', 'travel', 'sailboat', 'ocean', 'waves', 'sea', 'beach', 'ice', 'iceland', 'iceberg', 'arctic', 'mountain'];\n    this.state = { activeCategory: 'landscape', categories: {}, usedIds: [], photos: {} };\n    this.categoriesList.forEach(category => this.state.categories[category] = { page: 0, next_page: '', availableIds: [] });\n  }\n\n  isIndUsedIds(id) {\n    return this.state.usedIds.includes(id);\n  }\n\n  isInCategories(id) {\n    return Object.values(this.state.categories).some((category) => (category.availableIds.includes(id)));\n  }\n\n  push(category, json) {\n    this.state.categories[category].next_page = json.next_page;\n    this.state.categories[category].page = json.page;\n    json.photos.forEach(photo => {\n      if (this.isIndUsedIds(photo.id) === false && this.isInCategories(photo.id) === false) {\n        this.state.categories[category].availableIds.push(photo.id);\n        this.state.photos[photo.id] = photo;\n      }\n    })\n  }\n\n  getRandom(category, cantidad) {\n    const disponibles = () => this.state.categories[category].availableIds.length;\n    let random = [];\n    let ciclos = cantidad < disponibles() ? cantidad : disponibles();\n    while (random.length < ciclos) {\n      let index = Math.floor(Math.random() * (disponibles() - 1));\n      if (!random.includes(this.state.categories[category].availableIds[index])) {\n        let id = this.state.categories[category].availableIds.splice(index, 1).pop();\n        random.push(id);\n        this.state.usedIds.push(id);\n      }\n      this.setState({ usedIds: this.state.usedIds });\n    }\n    this.state.usedIds.push()\n    return random;\n  }\n\n  getSrc = (id, type) => {\n    return this.state.photos[id].src[type];\n  }\n\n  getPhotographer = (id) => {\n    return this.state.photos[id].photographer;\n  }\n\n  getNextPage(category) {\n    return this.state.categories[category].next_page;\n  }\n\n  getJson = async (category, url) => {\n    try {\n      url = (url == '') ? `https://api.pexels.com/v1/search?query=${category}&per_page=${this.pexelsPerPage}` : url;\n      let res = await fetch(url, { headers: { Authorization: process.env.REACT_APP_PEXELS_API_KEY } });\n      let json = await res.json();\n\n      if (!res.ok) throw { status: res.status, statusText: res.statusText };\n\n      return json;\n\n    } catch (err) {\n      let message = err.statusText || \"Ocurrió un error\";\n      console.log(`Error ${err.status}: ${message}`);\n      return {};\n    }\n  }\n\n  getPhotos = async (category, cantidad) => {\n    if (this.state.categories[category].availableIds.length < cantidad) await this.push(category, await this.getJson(category, this.getNextPage(category)));\n    return this.getRandom(category, cantidad);\n  }\n\n  addToImgContainer = async (category, num_img) => {\n    this.setState({ activeCategory: category });\n    await this.getPhotos(category, num_img);\n  }\n\n  infiniteScroll = () => {\n    if (window.scrollY + window.innerHeight >= document.documentElement.scrollHeight) this.addToImgContainer(this.state.activeCategory, this.defaultNumImg);\n  }\n\n  componentDidMount() {\n    this.addToImgContainer(this.state.activeCategory, 12);\n    window.addEventListener('scroll', this.infiniteScroll, true);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.infiniteScroll);\n  }\n\n  render() {\n    //console.log(this.state);\n    //console.log(this.state.usedIds);\n    return (\n      <div>\n        <NavHeader activeCategory={this.state.activeCategory} categoriesList={this.categoriesList} categoriesCallback={this.addToImgContainer} />\n        <ImgContainer usedIds={this.state.usedIds} getSrc={this.getSrc} getPhotographer={this.getPhotographer}/>\n      </div>\n    );\n  }\n\n}\n\nexport default App;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,kCAAkC;AACxD,OAAOC,YAAY,MAAM,wCAAwC;AAAC;AAElE,MAAMC,GAAG,SAASH,KAAK,CAACI,SAAS,CAAC;EAChCC,WAAW,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAAC,KA4CfC,MAAM,GAAG,CAACC,EAAE,EAAEC,IAAI,KAAK;MACrB,OAAO,IAAI,CAACC,KAAK,CAACC,MAAM,CAACH,EAAE,CAAC,CAACI,GAAG,CAACH,IAAI,CAAC;IACxC,CAAC;IAAA,KAEDI,eAAe,GAAIL,EAAE,IAAK;MACxB,OAAO,IAAI,CAACE,KAAK,CAACC,MAAM,CAACH,EAAE,CAAC,CAACM,YAAY;IAC3C,CAAC;IAAA,KAMDC,OAAO,GAAG,OAAOC,QAAQ,EAAEC,GAAG,KAAK;MACjC,IAAI;QACFA,GAAG,GAAIA,GAAG,IAAI,EAAE,GAAK,0CAAyCD,QAAS,aAAY,IAAI,CAACE,aAAc,EAAC,GAAGD,GAAG;QAC7G,IAAIE,GAAG,GAAG,MAAMC,KAAK,CAACH,GAAG,EAAE;UAAEI,OAAO,EAAE;YAAEC,aAAa,EAAEC,OAAO,CAACC,GAAG,CAACC;UAAyB;QAAE,CAAC,CAAC;QAChG,IAAIC,IAAI,GAAG,MAAMP,GAAG,CAACO,IAAI,EAAE;QAE3B,IAAI,CAACP,GAAG,CAACQ,EAAE,EAAE,MAAM;UAAEC,MAAM,EAAET,GAAG,CAACS,MAAM;UAAEC,UAAU,EAAEV,GAAG,CAACU;QAAW,CAAC;QAErE,OAAOH,IAAI;MAEb,CAAC,CAAC,OAAOI,GAAG,EAAE;QACZ,IAAIC,OAAO,GAAGD,GAAG,CAACD,UAAU,IAAI,kBAAkB;QAClDG,OAAO,CAACC,GAAG,CAAE,SAAQH,GAAG,CAACF,MAAO,KAAIG,OAAQ,EAAC,CAAC;QAC9C,OAAO,CAAC,CAAC;MACX;IACF,CAAC;IAAA,KAEDG,SAAS,GAAG,OAAOlB,QAAQ,EAAEmB,QAAQ,KAAK;MACxC,IAAI,IAAI,CAACzB,KAAK,CAAC0B,UAAU,CAACpB,QAAQ,CAAC,CAACqB,YAAY,CAACC,MAAM,GAAGH,QAAQ,EAAE,MAAM,IAAI,CAACI,IAAI,CAACvB,QAAQ,EAAE,MAAM,IAAI,CAACD,OAAO,CAACC,QAAQ,EAAE,IAAI,CAACwB,WAAW,CAACxB,QAAQ,CAAC,CAAC,CAAC;MACvJ,OAAO,IAAI,CAACyB,SAAS,CAACzB,QAAQ,EAAEmB,QAAQ,CAAC;IAC3C,CAAC;IAAA,KAEDO,iBAAiB,GAAG,OAAO1B,QAAQ,EAAE2B,OAAO,KAAK;MAC/C,IAAI,CAACC,QAAQ,CAAC;QAAEC,cAAc,EAAE7B;MAAS,CAAC,CAAC;MAC3C,MAAM,IAAI,CAACkB,SAAS,CAAClB,QAAQ,EAAE2B,OAAO,CAAC;IACzC,CAAC;IAAA,KAEDG,cAAc,GAAG,MAAM;MACrB,IAAIC,MAAM,CAACC,OAAO,GAAGD,MAAM,CAACE,WAAW,IAAIC,QAAQ,CAACC,eAAe,CAACC,YAAY,EAAE,IAAI,CAACV,iBAAiB,CAAC,IAAI,CAAChC,KAAK,CAACmC,cAAc,EAAE,IAAI,CAACQ,aAAa,CAAC;IACzJ,CAAC;IApFC,IAAI,CAACnC,aAAa,GAAG,GAAG;IACxB,IAAI,CAACmC,aAAa,GAAG,EAAE;IACvB,IAAI,CAACC,cAAc,GAAG,CAAC,WAAW,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,YAAY,EAAE,UAAU,EAAE,QAAQ,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,QAAQ,EAAE,UAAU,CAAC;IAChR,IAAI,CAAC5C,KAAK,GAAG;MAAEmC,cAAc,EAAE,WAAW;MAAET,UAAU,EAAE,CAAC,CAAC;MAAEmB,OAAO,EAAE,EAAE;MAAE5C,MAAM,EAAE,CAAC;IAAE,CAAC;IACrF,IAAI,CAAC2C,cAAc,CAACE,OAAO,CAACxC,QAAQ,IAAI,IAAI,CAACN,KAAK,CAAC0B,UAAU,CAACpB,QAAQ,CAAC,GAAG;MAAEyC,IAAI,EAAE,CAAC;MAAEC,SAAS,EAAE,EAAE;MAAErB,YAAY,EAAE;IAAG,CAAC,CAAC;EACzH;EAEAsB,YAAY,CAACnD,EAAE,EAAE;IACf,OAAO,IAAI,CAACE,KAAK,CAAC6C,OAAO,CAACK,QAAQ,CAACpD,EAAE,CAAC;EACxC;EAEAqD,cAAc,CAACrD,EAAE,EAAE;IACjB,OAAOsD,MAAM,CAACC,MAAM,CAAC,IAAI,CAACrD,KAAK,CAAC0B,UAAU,CAAC,CAAC4B,IAAI,CAAEhD,QAAQ,IAAMA,QAAQ,CAACqB,YAAY,CAACuB,QAAQ,CAACpD,EAAE,CAAE,CAAC;EACtG;EAEA+B,IAAI,CAACvB,QAAQ,EAAEU,IAAI,EAAE;IACnB,IAAI,CAAChB,KAAK,CAAC0B,UAAU,CAACpB,QAAQ,CAAC,CAAC0C,SAAS,GAAGhC,IAAI,CAACgC,SAAS;IAC1D,IAAI,CAAChD,KAAK,CAAC0B,UAAU,CAACpB,QAAQ,CAAC,CAACyC,IAAI,GAAG/B,IAAI,CAAC+B,IAAI;IAChD/B,IAAI,CAACf,MAAM,CAAC6C,OAAO,CAACS,KAAK,IAAI;MAC3B,IAAI,IAAI,CAACN,YAAY,CAACM,KAAK,CAACzD,EAAE,CAAC,KAAK,KAAK,IAAI,IAAI,CAACqD,cAAc,CAACI,KAAK,CAACzD,EAAE,CAAC,KAAK,KAAK,EAAE;QACpF,IAAI,CAACE,KAAK,CAAC0B,UAAU,CAACpB,QAAQ,CAAC,CAACqB,YAAY,CAACE,IAAI,CAAC0B,KAAK,CAACzD,EAAE,CAAC;QAC3D,IAAI,CAACE,KAAK,CAACC,MAAM,CAACsD,KAAK,CAACzD,EAAE,CAAC,GAAGyD,KAAK;MACrC;IACF,CAAC,CAAC;EACJ;EAEAxB,SAAS,CAACzB,QAAQ,EAAEmB,QAAQ,EAAE;IAC5B,MAAM+B,WAAW,GAAG,MAAM,IAAI,CAACxD,KAAK,CAAC0B,UAAU,CAACpB,QAAQ,CAAC,CAACqB,YAAY,CAACC,MAAM;IAC7E,IAAI6B,MAAM,GAAG,EAAE;IACf,IAAIC,MAAM,GAAGjC,QAAQ,GAAG+B,WAAW,EAAE,GAAG/B,QAAQ,GAAG+B,WAAW,EAAE;IAChE,OAAOC,MAAM,CAAC7B,MAAM,GAAG8B,MAAM,EAAE;MAC7B,IAAIC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACH,MAAM,EAAE,IAAID,WAAW,EAAE,GAAG,CAAC,CAAC,CAAC;MAC3D,IAAI,CAACC,MAAM,CAACP,QAAQ,CAAC,IAAI,CAAClD,KAAK,CAAC0B,UAAU,CAACpB,QAAQ,CAAC,CAACqB,YAAY,CAACgC,KAAK,CAAC,CAAC,EAAE;QACzE,IAAI7D,EAAE,GAAG,IAAI,CAACE,KAAK,CAAC0B,UAAU,CAACpB,QAAQ,CAAC,CAACqB,YAAY,CAACmC,MAAM,CAACH,KAAK,EAAE,CAAC,CAAC,CAACI,GAAG,EAAE;QAC5EN,MAAM,CAAC5B,IAAI,CAAC/B,EAAE,CAAC;QACf,IAAI,CAACE,KAAK,CAAC6C,OAAO,CAAChB,IAAI,CAAC/B,EAAE,CAAC;MAC7B;MACA,IAAI,CAACoC,QAAQ,CAAC;QAAEW,OAAO,EAAE,IAAI,CAAC7C,KAAK,CAAC6C;MAAQ,CAAC,CAAC;IAChD;IACA,IAAI,CAAC7C,KAAK,CAAC6C,OAAO,CAAChB,IAAI,EAAE;IACzB,OAAO4B,MAAM;EACf;EAUA3B,WAAW,CAACxB,QAAQ,EAAE;IACpB,OAAO,IAAI,CAACN,KAAK,CAAC0B,UAAU,CAACpB,QAAQ,CAAC,CAAC0C,SAAS;EAClD;EAiCAgB,iBAAiB,GAAG;IAClB,IAAI,CAAChC,iBAAiB,CAAC,IAAI,CAAChC,KAAK,CAACmC,cAAc,EAAE,EAAE,CAAC;IACrDE,MAAM,CAAC4B,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC7B,cAAc,EAAE,IAAI,CAAC;EAC9D;EAEA8B,oBAAoB,GAAG;IACrB7B,MAAM,CAAC8B,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAAC/B,cAAc,CAAC;EAC3D;EAEAgC,MAAM,GAAG;IACP;IACA;IACA,oBACE;MAAA,wBACE,QAAC,SAAS;QAAC,cAAc,EAAE,IAAI,CAACpE,KAAK,CAACmC,cAAe;QAAC,cAAc,EAAE,IAAI,CAACS,cAAe;QAAC,kBAAkB,EAAE,IAAI,CAACZ;MAAkB;QAAA;QAAA;QAAA;MAAA,QAAG,eACzI,QAAC,YAAY;QAAC,OAAO,EAAE,IAAI,CAAChC,KAAK,CAAC6C,OAAQ;QAAC,MAAM,EAAE,IAAI,CAAChD,MAAO;QAAC,eAAe,EAAE,IAAI,CAACM;MAAgB;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA;MAAA;MAAA;MAAA;IAAA,QACpG;EAEV;AAEF;AAEA,eAAeV,GAAG"},"metadata":{},"sourceType":"module"}