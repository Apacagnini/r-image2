{"ast":null,"code":"var _jsxFileName = \"/hdd1/Alejandro_02/cursos/UTNBA-FullStackDev/proyecto-final-front/linea_03/r-image/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport NavHeader from './NavHeader';\nimport ImgContainer from './ImgContainer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.getJson = async (category, url) => {\n      try {\n        url = url == '' ? `https://api.pexels.com/v1/search?query=${category}&per_page=${this.state.pexelsPerPage}` : url;\n        let res = await fetch(url, {\n          headers: {\n            Authorization: '563492ad6f91700001000001c6df12244f84428fa8467b09ec5d6ff9'\n          }\n        });\n        let json = await res.json();\n        //console.log(res, json);\n\n        if (!res.ok) throw {\n          status: res.status,\n          statusText: res.statusText\n        };\n        return json;\n      } catch (err) {\n        let message = err.statusText || \"Ocurrió un error\";\n        console.log(`Error ${err.status}: ${message}`);\n        return {};\n      }\n    };\n    this.getPhotos = async (category, cantidad) => {\n      if (this.state.categories[category].availableIds.length < cantidad) await this.push(category, await this.getJson(category, this.getNextPage(category)));\n      return this.getRandom(category, cantidad);\n    };\n    this.state = {\n      categoriesList: ['landscape', 'city', 'sky', 'nature', 'forest', 'sea', 'beach', 'mountain'],\n      pexelsPerPage: 50,\n      defaultNumImg: 12,\n      active_category: 'landscape',\n      categories: {},\n      usedIds: [],\n      photos: {}\n    };\n    this.state.categoriesList.forEach(category => this.state.categories[category] = {\n      page: 0,\n      next_page: '',\n      availableIds: []\n    });\n    //console.log(this.state);\n  }\n\n  isIndUsedIds(id) {\n    return this.state.usedIds.includes(id);\n  }\n  isInCategories(id) {\n    return Object.values(this.state.categories).some(category => category.availableIds.includes(id));\n  }\n  push(category, json) {\n    this.state.categories[category].next_page = json.next_page;\n    this.state.categories[category].page = json.page;\n    json.photos.forEach(photo => {\n      if (this.isIndUsedIds(photo.id) === false && this.isInCategories(photo.id) === false) {\n        this.state.categories[category].availableIds.push(photo.id);\n        this.state.photos[photo.id] = photo;\n      }\n    });\n  }\n  getRandom(category, cantidad) {\n    const disponibles = () => this.state.categories[category].availableIds.length;\n    let random = [];\n    let ciclos = cantidad < disponibles() ? cantidad : disponibles();\n    while (random.length < ciclos) {\n      let index = Math.floor(Math.random() * (disponibles() - 1));\n      if (!random.includes(this.state.categories[category].availableIds[index])) {\n        let id = this.state.categories[category].availableIds.splice(index, 1).pop();\n        random.push(id);\n        this.state.usedIds.push(id);\n      }\n    }\n    this.state.usedIds.push();\n    return random;\n  }\n  getSrc(id, type) {\n    return this.state.photos[id].src[type];\n  }\n  getNextPage(category) {\n    return this.state.categories[category].next_page;\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(NavHeader, {\n        categoriesList: this.state.categoriesList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImgContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n/*\nfunction App() {\n  return (\n    <div>\n      <NavHeader/>\n      <ImgContainer/>\n    </div>\n  );\n}\n*/\nexport default App;","map":{"version":3,"names":["React","NavHeader","ImgContainer","App","Component","constructor","props","getJson","category","url","state","pexelsPerPage","res","fetch","headers","Authorization","json","ok","status","statusText","err","message","console","log","getPhotos","cantidad","categories","availableIds","length","push","getNextPage","getRandom","categoriesList","defaultNumImg","active_category","usedIds","photos","forEach","page","next_page","isIndUsedIds","id","includes","isInCategories","Object","values","some","photo","disponibles","random","ciclos","index","Math","floor","splice","pop","getSrc","type","src","render"],"sources":["/hdd1/Alejandro_02/cursos/UTNBA-FullStackDev/proyecto-final-front/linea_03/r-image/src/App.js"],"sourcesContent":["import React from 'react';\nimport './App.css';\nimport NavHeader from './NavHeader';\nimport ImgContainer from './ImgContainer';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { categoriesList: ['landscape', 'city', 'sky', 'nature', 'forest', 'sea', 'beach', 'mountain'], pexelsPerPage: 50, defaultNumImg: 12, active_category: 'landscape', categories: {}, usedIds: [], photos: {} };\n    this.state.categoriesList.forEach(category => this.state.categories[category] = { page: 0, next_page: '', availableIds: [] });\n    //console.log(this.state);\n  }\n\n  isIndUsedIds(id) {\n    return this.state.usedIds.includes(id);\n  }\n\n  isInCategories(id) {\n    return Object.values(this.state.categories).some((category) => (category.availableIds.includes(id)));\n  }\n\n  push(category, json) {\n    this.state.categories[category].next_page = json.next_page;\n    this.state.categories[category].page = json.page;\n    json.photos.forEach(photo => {\n      if (this.isIndUsedIds(photo.id) === false && this.isInCategories(photo.id) === false) {\n        this.state.categories[category].availableIds.push(photo.id);\n        this.state.photos[photo.id] = photo;\n      }\n    })\n  }\n\n  getRandom(category, cantidad) {\n    const disponibles = () => this.state.categories[category].availableIds.length;\n    let random = [];\n    let ciclos = cantidad < disponibles() ? cantidad : disponibles();\n    while (random.length < ciclos) {\n      let index = Math.floor(Math.random() * (disponibles() - 1));\n      if (!random.includes(this.state.categories[category].availableIds[index])) {\n        let id = this.state.categories[category].availableIds.splice(index, 1).pop();\n        random.push(id);\n        this.state.usedIds.push(id);\n      }\n    }\n    this.state.usedIds.push()\n    return random;\n  }\n\n  getSrc(id, type) {\n    return this.state.photos[id].src[type];\n  }\n\n  getNextPage(category) {\n    return this.state.categories[category].next_page;\n  }\n\n  getJson = async (category, url) => {\n    try {\n        url = (url == '') ? `https://api.pexels.com/v1/search?query=${category}&per_page=${this.state.pexelsPerPage}` : url;\n        let res = await fetch(url, { headers: { Authorization: '563492ad6f91700001000001c6df12244f84428fa8467b09ec5d6ff9' } });\n        let json = await res.json();\n        //console.log(res, json);\n  \n        if (!res.ok) throw { status: res.status, statusText: res.statusText };\n  \n        return json;\n  \n    } catch (err) {\n        let message = err.statusText || \"Ocurrió un error\";\n        console.log(`Error ${err.status}: ${message}`);\n        return {};\n    }\n  }\n  \n  getPhotos = async (category, cantidad) => {\n    if (this.state.categories[category].availableIds.length < cantidad) await this.push(category, await this.getJson(category, this.getNextPage(category)));\n    return this.getRandom(category, cantidad);\n  }\n\n  render() {\n    return (\n      <div>\n        <NavHeader categoriesList={this.state.categoriesList} />\n        <ImgContainer />\n      </div>\n    );\n  }\n\n}\n\n/*\nfunction App() {\n  return (\n    <div>\n      <NavHeader/>\n      <ImgContainer/>\n    </div>\n  );\n}\n*/\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}