{"ast":null,"code":"var _jsxFileName = \"/hdd1/Alejandro_02/cursos/UTNBA-FullStackDev/proyecto-final-front/linea_03/r-image/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport NavHeader from './NavHeader';\nimport ImgContainer from './ImgContainer';\nimport { Container } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends React.Component {\n  constructor(props) {\n    var _this;\n    super(props);\n    _this = this;\n    this.getJson = async (category, url) => {\n      try {\n        url = url == '' ? `https://api.pexels.com/v1/search?query=${category}&per_page=${this.state.pexelsPerPage}` : url;\n        let res = await fetch(url, {\n          headers: {\n            Authorization: '563492ad6f91700001000001c6df12244f84428fa8467b09ec5d6ff9'\n          }\n        });\n        let json = await res.json();\n        //console.log(res, json);\n\n        if (!res.ok) throw {\n          status: res.status,\n          statusText: res.statusText\n        };\n        return json;\n      } catch (err) {\n        let message = err.statusText || \"OcurriÃ³ un error\";\n        console.log(`Error ${err.status}: ${message}`);\n        return {};\n      }\n    };\n    this.getPhotos = async (category, cantidad) => {\n      if (this.state.categories[category].availableIds.length < cantidad) await this.push(category, await this.getJson(category, this.getNextPage(category)));\n      return this.getRandom(category, cantidad);\n    };\n    this.addToImgContainer = async function (category, num_img) {\n      let colorizeButton = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      //this.state.activeCategory = category;\n      _this.setState({\n        activeCategory: category\n      });\n      let li = await _this.getPhotos(category, num_img);\n      _this.forceUpdate();\n      console.log('addToImgContainer state ' + _this.state);\n      console.log('addToImgContainer getSrc' + _this.getSrc(li[0], 'medium'));\n    };\n    this.state = {\n      categoriesList: ['landscape', 'city', 'sky', 'nature', 'forest', 'sea', 'beach', 'mountain'],\n      pexelsPerPage: 50,\n      defaultNumImg: 12,\n      activeCategory: 'landscape',\n      categories: {},\n      usedIds: [],\n      photos: {}\n    };\n    this.state.categoriesList.forEach(category => this.state.categories[category] = {\n      page: 0,\n      next_page: '',\n      availableIds: []\n    });\n    //console.log(this.state);\n  }\n\n  isIndUsedIds(id) {\n    return this.state.usedIds.includes(id);\n  }\n  isInCategories(id) {\n    return Object.values(this.state.categories).some(category => category.availableIds.includes(id));\n  }\n  push(category, json) {\n    this.state.categories[category].next_page = json.next_page;\n    this.state.categories[category].page = json.page;\n    json.photos.forEach(photo => {\n      if (this.isIndUsedIds(photo.id) === false && this.isInCategories(photo.id) === false) {\n        this.state.categories[category].availableIds.push(photo.id);\n        this.state.photos[photo.id] = photo;\n      }\n    });\n  }\n  getRandom(category, cantidad) {\n    const disponibles = () => this.state.categories[category].availableIds.length;\n    let random = [];\n    let ciclos = cantidad < disponibles() ? cantidad : disponibles();\n    while (random.length < ciclos) {\n      let index = Math.floor(Math.random() * (disponibles() - 1));\n      if (!random.includes(this.state.categories[category].availableIds[index])) {\n        let id = this.state.categories[category].availableIds.splice(index, 1).pop();\n        random.push(id);\n        this.state.usedIds.push(id);\n        //this.setState(prevState => ({ usedIds: this.prevState.usedIds.concat([id]) }));\n      }\n    }\n\n    this.state.usedIds.push();\n    return random;\n  }\n  getSrc(id, type) {\n    //console.log('photos:' + this.state.photos);\n    return this.state.photos[id].src[type];\n  }\n  getNextPage(category) {\n    return this.state.categories[category].next_page;\n  }\n  render() {\n    //console.log(this.getPhotos('landscape',6));\n    console.log(this.state);\n    console.log(this.state.usedIds);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(NavHeader, {\n        categoriesList: this.state.categoriesList,\n        categoriesCallback: this.addToImgContainer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex flex-wrap justify-content-center box-container\",\n          id: \"img_container\",\n          children: this.state.usedIds.map(index => {\n            /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"box\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: this.getSrc(index, 'original'),\n                target: \"_blank\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"img-fluid\",\n                  alt: \"random image\",\n                  src: this.getSrc(index, 'medium')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n/*\nfunction App() {\n  return (\n    <div>\n      <NavHeader/>\n      <ImgContainer/>\n    </div>\n  );\n}\n*/\nexport default App;\n\n/*\n<ImgContainer usedIds={this.state.usedIds} getSrc={this.getSrc} />\n\nconst add_to_img_container = async  (category, num_img, colorizeButton = true) => {\n\n    const $img_container = document.getElementById(\"img_container\");\n    if (!$img_container) return;\n\n    if (colorizeButton) document.getElementById(active_category).classList.remove('button-active');\n    active_category = category;\n\n    let imgMapRandom = await getPhotos(category, num_img);\n\n    if (imgMapRandom.length == 0) return;\n\n    if (colorizeButton) document.getElementById(category).classList.add('button-active');\n\n    const img = document.createElement(\"img\");\n    img.className = 'img-fluid';\n    img.alt = 'random image';\n\n    const a = document.createElement('a');\n    a.target = \"_blank\";\n    a.appendChild(img);\n\n    const div = document.createElement(\"div\");\n    div.className = 'box';\n    div.appendChild(a);\n    \n    const $fragment = document.createDocumentFragment();\n\n    imgMapRandom.forEach( index => {\n        new_div = div.cloneNode(true);\n        new_div.querySelector('img').src = data.getSrc(index,'medium');\n        new_div.querySelector('a').href = data.getSrc(index,'original');\n        $fragment.appendChild(new_div);\n    });\n\n    $img_container.appendChild($fragment);\n}\n*/","map":{"version":3,"names":["React","NavHeader","ImgContainer","Container","App","Component","constructor","props","getJson","category","url","state","pexelsPerPage","res","fetch","headers","Authorization","json","ok","status","statusText","err","message","console","log","getPhotos","cantidad","categories","availableIds","length","push","getNextPage","getRandom","addToImgContainer","num_img","colorizeButton","setState","activeCategory","li","forceUpdate","getSrc","categoriesList","defaultNumImg","usedIds","photos","forEach","page","next_page","isIndUsedIds","id","includes","isInCategories","Object","values","some","photo","disponibles","random","ciclos","index","Math","floor","splice","pop","type","src","render","map"],"sources":["/hdd1/Alejandro_02/cursos/UTNBA-FullStackDev/proyecto-final-front/linea_03/r-image/src/App.js"],"sourcesContent":["import React from 'react';\nimport './App.css';\nimport NavHeader from './NavHeader';\nimport ImgContainer from './ImgContainer';\nimport { Container } from 'react-bootstrap';\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { categoriesList: ['landscape', 'city', 'sky', 'nature', 'forest', 'sea', 'beach', 'mountain'], pexelsPerPage: 50, defaultNumImg: 12, activeCategory: 'landscape', categories: {}, usedIds: [], photos: {} };\n    this.state.categoriesList.forEach(category => this.state.categories[category] = { page: 0, next_page: '', availableIds: [] });\n    //console.log(this.state);\n  }\n\n  isIndUsedIds(id) {\n    return this.state.usedIds.includes(id);\n  }\n\n  isInCategories(id) {\n    return Object.values(this.state.categories).some((category) => (category.availableIds.includes(id)));\n  }\n\n  push(category, json) {\n    this.state.categories[category].next_page = json.next_page;\n    this.state.categories[category].page = json.page;\n    json.photos.forEach(photo => {\n      if (this.isIndUsedIds(photo.id) === false && this.isInCategories(photo.id) === false) {\n        this.state.categories[category].availableIds.push(photo.id);\n        this.state.photos[photo.id] = photo;\n      }\n    })\n  }\n\n  getRandom(category, cantidad) {\n    const disponibles = () => this.state.categories[category].availableIds.length;\n    let random = [];\n    let ciclos = cantidad < disponibles() ? cantidad : disponibles();\n    while (random.length < ciclos) {\n      let index = Math.floor(Math.random() * (disponibles() - 1));\n      if (!random.includes(this.state.categories[category].availableIds[index])) {\n        let id = this.state.categories[category].availableIds.splice(index, 1).pop();\n        random.push(id);\n        this.state.usedIds.push(id);\n        //this.setState(prevState => ({ usedIds: this.prevState.usedIds.concat([id]) }));\n      }\n    }\n    this.state.usedIds.push()\n    return random;\n  }\n\n  getSrc(id, type) {\n    //console.log('photos:' + this.state.photos);\n    return this.state.photos[id].src[type];\n  }\n\n  getNextPage(category) {\n    return this.state.categories[category].next_page;\n  }\n\n  getJson = async (category, url) => {\n    try {\n      url = (url == '') ? `https://api.pexels.com/v1/search?query=${category}&per_page=${this.state.pexelsPerPage}` : url;\n      let res = await fetch(url, { headers: { Authorization: '563492ad6f91700001000001c6df12244f84428fa8467b09ec5d6ff9' } });\n      let json = await res.json();\n      //console.log(res, json);\n\n      if (!res.ok) throw { status: res.status, statusText: res.statusText };\n\n      return json;\n\n    } catch (err) {\n      let message = err.statusText || \"OcurriÃ³ un error\";\n      console.log(`Error ${err.status}: ${message}`);\n      return {};\n    }\n  }\n\n  getPhotos = async (category, cantidad) => {\n    if (this.state.categories[category].availableIds.length < cantidad) await this.push(category, await this.getJson(category, this.getNextPage(category)));\n    return this.getRandom(category, cantidad);\n  }\n\n  addToImgContainer = async (category, num_img, colorizeButton = true) => {\n    //this.state.activeCategory = category;\n    this.setState({ activeCategory: category });\n    let li = await this.getPhotos(category, num_img);\n    this.forceUpdate()\n    console.log('addToImgContainer state ' + this.state);\n    console.log('addToImgContainer getSrc' + this.getSrc(li[0], 'medium'));\n  }\n\n  render() {\n    //console.log(this.getPhotos('landscape',6));\n    console.log(this.state);\n    console.log(this.state.usedIds);\n    return (\n      <div>\n        <NavHeader categoriesList={this.state.categoriesList} categoriesCallback={this.addToImgContainer} />\n        <Container>\n          <div className='d-flex flex-wrap justify-content-center box-container' id=\"img_container\">\n            {\n              this.state.usedIds.map(index => {\n              <div className='box'>\n                <a href={this.getSrc(index, 'original')} target='_blank'>\n                  <img className='img-fluid' alt='random image' src={this.getSrc(index, 'medium')} ></img>\n                </a>\n              </div>\n            }) \n          }\n          </div>\n        </Container>\n      </div>\n    );\n  }\n\n}\n\n/*\nfunction App() {\n  return (\n    <div>\n      <NavHeader/>\n      <ImgContainer/>\n    </div>\n  );\n}\n*/\nexport default App;\n\n/*\n<ImgContainer usedIds={this.state.usedIds} getSrc={this.getSrc} />\n\nconst add_to_img_container = async  (category, num_img, colorizeButton = true) => {\n\n    const $img_container = document.getElementById(\"img_container\");\n    if (!$img_container) return;\n\n    if (colorizeButton) document.getElementById(active_category).classList.remove('button-active');\n    active_category = category;\n\n    let imgMapRandom = await getPhotos(category, num_img);\n\n    if (imgMapRandom.length == 0) return;\n\n    if (colorizeButton) document.getElementById(category).classList.add('button-active');\n\n    const img = document.createElement(\"img\");\n    img.className = 'img-fluid';\n    img.alt = 'random image';\n\n    const a = document.createElement('a');\n    a.target = \"_blank\";\n    a.appendChild(img);\n\n    const div = document.createElement(\"div\");\n    div.className = 'box';\n    div.appendChild(a);\n    \n    const $fragment = document.createDocumentFragment();\n\n    imgMapRandom.forEach( index => {\n        new_div = div.cloneNode(true);\n        new_div.querySelector('img').src = data.getSrc(index,'medium');\n        new_div.querySelector('a').href = data.getSrc(index,'original');\n        $fragment.appendChild(new_div);\n    });\n\n    $img_container.appendChild($fragment);\n}\n*/"],"mappings":"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"},"metadata":{},"sourceType":"module"}