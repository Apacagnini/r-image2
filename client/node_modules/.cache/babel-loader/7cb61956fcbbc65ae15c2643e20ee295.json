{"ast":null,"code":"var _jsxFileName = \"/hdd1/Alejandro_02/cursos/UTNBA-FullStackDev/proyecto-final-front/linea_03/r-image/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport NavHeader from './NavHeader';\nimport ImgContainer from './ImgContainer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.getPhotos = async (category, cantidad) => {\n      if (this.state.categories[category].availableIds.length < cantidad) await this.push(category, await getJson(category, this.getNextPage(category)));\n      return data.getRandom(category, cantidad);\n    };\n    this.state = {\n      categoriesList: ['landscape', 'city', 'sky', 'nature', 'forest', 'sea', 'beach', 'mountain'],\n      pexelsPerPage: 50,\n      defaultNumImg: 12,\n      active_category: 'landscape',\n      categories: {},\n      usedIds: [],\n      photos: {}\n    };\n    this.state.categoriesList.forEach(category => this.state.categories[category] = {\n      page: 0,\n      next_page: '',\n      availableIds: []\n    });\n    //console.log(this.state);\n  }\n\n  isIndUsedIds(id) {\n    return this.state.usedIds.includes(id);\n  }\n  isInCategories(id) {\n    return Object.values(this.state.categories).some(category => category.availableIds.includes(id));\n  }\n  push(category, json) {\n    this.state.categories[category].next_page = json.next_page;\n    this.state.categories[category].page = json.page;\n    json.photos.forEach(photo => {\n      if (this.isIndUsedIds(photo.id) === false && this.isInCategories(photo.id) === false) {\n        this.state.categories[category].availableIds.push(photo.id);\n        this.state.photos[photo.id] = photo;\n      }\n    });\n  }\n  getRandom(category, cantidad) {\n    const disponibles = () => this.state.categories[category].availableIds.length;\n    let random = [];\n    let ciclos = cantidad < disponibles() ? cantidad : disponibles();\n    while (random.length < ciclos) {\n      let index = Math.floor(Math.random() * (disponibles() - 1));\n      if (!random.includes(this.state.categories[category].availableIds[index])) {\n        let id = this.state.categories[category].availableIds.splice(index, 1).pop();\n        random.push(id);\n        this.state.usedIds.push(id);\n      }\n    }\n    this.state.usedIds.push();\n    return random;\n  }\n  getSrc(id, type) {\n    return this.state.photos[id].src[type];\n  }\n  getNextPage(category) {\n    return this.state.categories[category].next_page;\n  }\n  async getJson(category, url) {\n    try {\n      url = url == '' ? `https://api.pexels.com/v1/search?query=${category}&per_page=${this.state.pexelsPerPage}` : url;\n      let res = await fetch(url, {\n        headers: {\n          Authorization: '563492ad6f91700001000001c6df12244f84428fa8467b09ec5d6ff9'\n        }\n      });\n      let json = await res.json();\n      //console.log(res, json);\n\n      if (!res.ok) throw {\n        status: res.status,\n        statusText: res.statusText\n      };\n      return json;\n    } catch (err) {\n      let message = err.statusText || \"Ocurrió un error\";\n      console.log(`Error ${err.status}: ${message}`);\n      return {};\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(NavHeader, {\n        categoriesList: this.state.categoriesList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImgContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n/*\nfunction App() {\n  return (\n    <div>\n      <NavHeader/>\n      <ImgContainer/>\n    </div>\n  );\n}\n*/\nexport default App;","map":{"version":3,"names":["React","NavHeader","ImgContainer","App","Component","constructor","props","getPhotos","category","cantidad","state","categories","availableIds","length","push","getJson","getNextPage","data","getRandom","categoriesList","pexelsPerPage","defaultNumImg","active_category","usedIds","photos","forEach","page","next_page","isIndUsedIds","id","includes","isInCategories","Object","values","some","json","photo","disponibles","random","ciclos","index","Math","floor","splice","pop","getSrc","type","src","url","res","fetch","headers","Authorization","ok","status","statusText","err","message","console","log","render"],"sources":["/hdd1/Alejandro_02/cursos/UTNBA-FullStackDev/proyecto-final-front/linea_03/r-image/src/App.js"],"sourcesContent":["import React from 'react';\nimport './App.css';\nimport NavHeader from './NavHeader';\nimport ImgContainer from './ImgContainer';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { categoriesList: ['landscape', 'city', 'sky', 'nature', 'forest', 'sea', 'beach', 'mountain'], pexelsPerPage: 50, defaultNumImg: 12, active_category: 'landscape', categories: {}, usedIds: [], photos: {} };\n    this.state.categoriesList.forEach(category => this.state.categories[category] = { page: 0, next_page: '', availableIds: [] });\n    //console.log(this.state);\n  }\n\n  isIndUsedIds(id) {\n    return this.state.usedIds.includes(id);\n  }\n\n  isInCategories(id) {\n    return Object.values(this.state.categories).some((category) => (category.availableIds.includes(id)));\n  }\n\n  push(category, json) {\n    this.state.categories[category].next_page = json.next_page;\n    this.state.categories[category].page = json.page;\n    json.photos.forEach(photo => {\n      if (this.isIndUsedIds(photo.id) === false && this.isInCategories(photo.id) === false) {\n        this.state.categories[category].availableIds.push(photo.id);\n        this.state.photos[photo.id] = photo;\n      }\n    })\n  }\n\n  getRandom(category, cantidad) {\n    const disponibles = () => this.state.categories[category].availableIds.length;\n    let random = [];\n    let ciclos = cantidad < disponibles() ? cantidad : disponibles();\n    while (random.length < ciclos) {\n      let index = Math.floor(Math.random() * (disponibles() - 1));\n      if (!random.includes(this.state.categories[category].availableIds[index])) {\n        let id = this.state.categories[category].availableIds.splice(index, 1).pop();\n        random.push(id);\n        this.state.usedIds.push(id);\n      }\n    }\n    this.state.usedIds.push()\n    return random;\n  }\n\n  getSrc(id, type) {\n    return this.state.photos[id].src[type];\n  }\n\n  getNextPage(category) {\n    return this.state.categories[category].next_page;\n  }\n\n  async getJson (category, url) {\n    try {\n        url = (url == '') ? `https://api.pexels.com/v1/search?query=${category}&per_page=${this.state.pexelsPerPage}` : url;\n        let res = await fetch(url, { headers: { Authorization: '563492ad6f91700001000001c6df12244f84428fa8467b09ec5d6ff9' } });\n        let json = await res.json();\n        //console.log(res, json);\n  \n        if (!res.ok) throw { status: res.status, statusText: res.statusText };\n  \n        return json;\n  \n    } catch (err) {\n        let message = err.statusText || \"Ocurrió un error\";\n        console.log(`Error ${err.status}: ${message}`);\n        return {};\n    }\n  }\n  \n  getPhotos = async (category, cantidad) => {\n    if (this.state.categories[category].availableIds.length < cantidad) await this.push(category, await getJson(category, this.getNextPage(category)));\n    return data.getRandom(category, cantidad);\n  }\n\n  render() {\n    return (\n      <div>\n        <NavHeader categoriesList={this.state.categoriesList} />\n        <ImgContainer />\n      </div>\n    );\n  }\n\n}\n\n/*\nfunction App() {\n  return (\n    <div>\n      <NavHeader/>\n      <ImgContainer/>\n    </div>\n  );\n}\n*/\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}