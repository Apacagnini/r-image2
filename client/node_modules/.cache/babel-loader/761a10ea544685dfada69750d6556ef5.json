{"ast":null,"code":"/* VARIABLES GLOBALES */\n\nlet categories_list = ['landscape', 'city', 'sky', 'nature', 'forest', 'sea', 'beach', 'mountain'];\nlet active_category = 'landscape';\nlet default_num_img = 12;\nlet pexels_per_page = 50;\n\n/* FUNCIONES */\n\nfunction getCategoriesList() {\n  return categories_list;\n}\n\n/*\nconst border_bottom_nav = () => {\n    if ( !document.getElementById(\"headerNav\") ) return;\n    if (window.scrollY > 0){\n        document.getElementById(\"headerNav\").classList.add('border-bottom-active');\n    }else{\n        document.getElementById(\"headerNav\").classList.remove('border-bottom-active');\n    }\n} \n\nconst infiniteScroll = () => {\n    if (window.scrollY + window.innerHeight >= document.documentElement.scrollHeight) add_to_img_container(active_category, default_num_img, false);\n}\n*/\n\nconst getJson = async (category, url) => {\n  try {\n    url = url == '' ? `https://api.pexels.com/v1/search?query=${category}&per_page=${pexels_per_page}` : url;\n    let res = await fetch(url, {\n      headers: {\n        Authorization: '563492ad6f91700001000001c6df12244f84428fa8467b09ec5d6ff9'\n      }\n    });\n    let json = await res.json();\n    //console.log(res, json);\n\n    if (!res.ok) throw {\n      status: res.status,\n      statusText: res.statusText\n    };\n    return json;\n  } catch (err) {\n    let message = err.statusText || \"Ocurrió un error\";\n    console.log(`Error ${err.status}: ${message}`);\n    return {};\n  }\n};\nconst getPhotos = async (category, cantidad) => {\n  if (data.categories[category].availableIds.length < cantidad) await data.push(category, await getJson(category, data.getNextPage(category)));\n  return data.getRandom(category, cantidad);\n};\n\n/*\nconst add_to_img_container = async  (category, num_img, colorizeButton = true) => {\n\n    const $img_container = document.getElementById(\"img_container\");\n    if (!$img_container) return;\n\n    if (colorizeButton) document.getElementById(active_category).classList.remove('button-active');\n    active_category = category;\n\n    let imgMapRandom = await getPhotos(category, num_img);\n\n    if (imgMapRandom.length == 0) return;\n\n    if (colorizeButton) document.getElementById(category).classList.add('button-active');\n\n    const img = document.createElement(\"img\");\n    img.className = 'img-fluid';\n    img.alt = 'random image';\n\n    const a = document.createElement('a');\n    a.target = \"_blank\";\n    a.appendChild(img);\n\n    const div = document.createElement(\"div\");\n    div.className = 'box';\n    div.appendChild(a);\n    \n    const $fragment = document.createDocumentFragment();\n\n    imgMapRandom.forEach( index => {\n        new_div = div.cloneNode(true);\n        new_div.querySelector('img').src = data.getSrc(index,'medium');\n        new_div.querySelector('a').href = data.getSrc(index,'original');\n        $fragment.appendChild(new_div);\n    });\n\n    $img_container.appendChild($fragment);\n}\n*/\n/* CLASES */\n\nclass dataClass {\n  constructor(categories_list) {\n    this.categories = {};\n    categories_list.forEach(category => this.categories[category] = {\n      page: 0,\n      next_page: '',\n      availableIds: []\n    });\n    this.usedIds = [];\n    this.photos = {};\n  }\n  isIndUsedIds(id) {\n    return this.usedIds.includes(id);\n  }\n  isInCategories(id) {\n    return Object.values(this.categories).some(category => category.availableIds.includes(id));\n  }\n  push(category, json) {\n    this.categories[category].next_page = json.next_page;\n    this.categories[category].page = json.page;\n    json.photos.forEach(photo => {\n      if (this.isIndUsedIds(photo.id) === false && this.isInCategories(photo.id) === false) {\n        this.categories[category].availableIds.push(photo.id);\n        this.photos[photo.id] = photo;\n      }\n    });\n  }\n  getRandom(category, cantidad) {\n    const disponibles = () => this.categories[category].availableIds.length;\n    let random = [];\n    let ciclos = cantidad < disponibles() ? cantidad : disponibles();\n    while (random.length < ciclos) {\n      let index = Math.floor(Math.random() * (disponibles() - 1));\n      if (!random.includes(this.categories[category].availableIds[index])) {\n        let id = this.categories[category].availableIds.splice(index, 1).pop();\n        random.push(id);\n        this.usedIds.push(id);\n      }\n    }\n    this.usedIds.push();\n    return random;\n  }\n  getSrc(id, type) {\n    return this.photos[id].src[type];\n  }\n  getNextPage(category) {\n    return this.categories[category].next_page;\n  }\n  remove(ids) {\n    ids.forEach(id => delete this.photos[id]);\n  }\n}\n\n/* EVENTOS */\n/*\nwindow.onscroll = () => {\n    border_bottom_nav();\n    infiniteScroll();\n}\n*/\n/* PRINCIPAL */\ndata = new dataClass(categories_list);\n/*\nfill_navbarCategorias();\nadd_to_img_container(active_category, default_num_img, false);\n*/\n\nexport default getCategoriesList;","map":{"version":3,"names":["categories_list","active_category","default_num_img","pexels_per_page","getCategoriesList","getJson","category","url","res","fetch","headers","Authorization","json","ok","status","statusText","err","message","console","log","getPhotos","cantidad","data","categories","availableIds","length","push","getNextPage","getRandom","dataClass","constructor","forEach","page","next_page","usedIds","photos","isIndUsedIds","id","includes","isInCategories","Object","values","some","photo","disponibles","random","ciclos","index","Math","floor","splice","pop","getSrc","type","src","remove","ids"],"sources":["/hdd1/Alejandro_02/cursos/UTNBA-FullStackDev/proyecto-final-front/linea_03/r-image/src/main.js"],"sourcesContent":["\n\n/* VARIABLES GLOBALES */\n\nlet categories_list = ['landscape', 'city', 'sky', 'nature', 'forest', 'sea','beach','mountain'];\nlet active_category = 'landscape';\nlet default_num_img = 12;\nlet pexels_per_page = 50;\n\n/* FUNCIONES */\n\nfunction getCategoriesList(){\n    return categories_list;\n}\n\n/*\nconst border_bottom_nav = () => {\n    if ( !document.getElementById(\"headerNav\") ) return;\n    if (window.scrollY > 0){\n        document.getElementById(\"headerNav\").classList.add('border-bottom-active');\n    }else{\n        document.getElementById(\"headerNav\").classList.remove('border-bottom-active');\n    }\n} \n\nconst infiniteScroll = () => {\n    if (window.scrollY + window.innerHeight >= document.documentElement.scrollHeight) add_to_img_container(active_category, default_num_img, false);\n}\n*/\n\nconst getJson = async (category, url) => {\n    try {\n        url = (url == '') ? `https://api.pexels.com/v1/search?query=${category}&per_page=${pexels_per_page}` : url;\n        let res = await fetch(url, { headers: { Authorization: '563492ad6f91700001000001c6df12244f84428fa8467b09ec5d6ff9' } });\n        let json = await res.json();\n        //console.log(res, json);\n\n        if (!res.ok) throw { status: res.status, statusText: res.statusText };\n\n        return json;\n\n    } catch (err) {\n        let message = err.statusText || \"Ocurrió un error\";\n        console.log(`Error ${err.status}: ${message}`);\n        return {};\n    }\n}\n\nconst getPhotos = async (category, cantidad) => {\n    if (data.categories[category].availableIds.length < cantidad) await data.push(category, await getJson(category, data.getNextPage(category)));\n    return data.getRandom(category, cantidad);\n}\n\n/*\nconst add_to_img_container = async  (category, num_img, colorizeButton = true) => {\n\n    const $img_container = document.getElementById(\"img_container\");\n    if (!$img_container) return;\n\n    if (colorizeButton) document.getElementById(active_category).classList.remove('button-active');\n    active_category = category;\n\n    let imgMapRandom = await getPhotos(category, num_img);\n\n    if (imgMapRandom.length == 0) return;\n\n    if (colorizeButton) document.getElementById(category).classList.add('button-active');\n\n    const img = document.createElement(\"img\");\n    img.className = 'img-fluid';\n    img.alt = 'random image';\n\n    const a = document.createElement('a');\n    a.target = \"_blank\";\n    a.appendChild(img);\n\n    const div = document.createElement(\"div\");\n    div.className = 'box';\n    div.appendChild(a);\n    \n    const $fragment = document.createDocumentFragment();\n\n    imgMapRandom.forEach( index => {\n        new_div = div.cloneNode(true);\n        new_div.querySelector('img').src = data.getSrc(index,'medium');\n        new_div.querySelector('a').href = data.getSrc(index,'original');\n        $fragment.appendChild(new_div);\n    });\n\n    $img_container.appendChild($fragment);\n}\n*/\n/* CLASES */\n\nclass dataClass {\n    constructor(categories_list) {\n        this.categories = {}\n        categories_list.forEach( category => this.categories[category] = {page: 0, next_page:'', availableIds:[]} );\n        this.usedIds = [];\n        this.photos = {};\n    }\n    isIndUsedIds(id){\n        return this.usedIds.includes(id);\n    }\n    isInCategories(id){\n        return Object.values(this.categories).some( (category)=>( category.availableIds.includes(id) ) );\n    }\n    push(category,json) {\n        this.categories[category].next_page = json.next_page;\n        this.categories[category].page = json.page;\n        json.photos.forEach( photo => {\n            if(this.isIndUsedIds(photo.id) === false && this.isInCategories(photo.id) === false) {\n                this.categories[category].availableIds.push(photo.id);\n                this.photos[photo.id] = photo;\n            }\n        })\n    }\n    getRandom(category, cantidad) {\n        const disponibles = () => this.categories[category].availableIds.length;\n        let random = [];\n        let ciclos = cantidad < disponibles() ? cantidad : disponibles();\n        while (random.length < ciclos) {\n            let index = Math.floor(Math.random() * ( disponibles() - 1 ) );\n            if (!random.includes(this.categories[category].availableIds[index])){\n                let id = this.categories[category].availableIds.splice(index,1).pop();\n                random.push(id);\n                this.usedIds.push(id);\n            }\n        }\n        this.usedIds.push()\n        return random;\n    }\n    getSrc(id,type){\n        return this.photos[id].src[type];\n    }\n    getNextPage(category){\n        return this.categories[category].next_page;\n    }\n    remove(ids){\n        ids.forEach(id => delete this.photos[id]);\n    }\n}\n\n/* EVENTOS */\n/*\nwindow.onscroll = () => {\n    border_bottom_nav();\n    infiniteScroll();\n}\n*/\n/* PRINCIPAL */\ndata = new dataClass(categories_list);\n/*\nfill_navbarCategorias();\nadd_to_img_container(active_category, default_num_img, false);\n*/\n\nexport default getCategoriesList;"],"mappings":"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"},"metadata":{},"sourceType":"module"}